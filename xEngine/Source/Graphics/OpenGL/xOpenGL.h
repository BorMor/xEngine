#pragma once

#include <stdint.h>

typedef unsigned int GLenum;
typedef unsigned char GLboolean;
typedef unsigned int GLbitfield;
typedef signed char GLbyte;
typedef short GLshort;
typedef int GLint;
typedef int GLsizei;
typedef unsigned char GLubyte;
typedef unsigned short GLushort;
typedef unsigned int GLuint;
typedef float GLfloat;
typedef float GLclampf;
typedef double GLdouble;
typedef double GLclampd;
typedef void GLvoid;
typedef ptrdiff_t GLintptr;
typedef ptrdiff_t GLsizeiptr;
typedef char GLchar;
typedef int64_t GLint64;
typedef uint64_t GLuint64;
typedef struct __GLsync *GLsync;

#ifndef APIENTRY
#define APIENTRY
#endif
#ifndef APIENTRYP
#define APIENTRYP APIENTRY *
#endif
#ifndef GLAPI
#define GLAPI extern
#endif

// GL_VERSION_1_1
#define GL_DEPTH_BUFFER_BIT	0x00000100
#define GL_STENCIL_BUFFER_BIT	0x00000400
#define GL_COLOR_BUFFER_BIT	0x00004000
#define GL_FALSE	0
#define GL_TRUE	1
#define GL_POINTS	0x0000
#define GL_LINES	0x0001
#define GL_LINE_LOOP	0x0002
#define GL_LINE_STRIP	0x0003
#define GL_TRIANGLES	0x0004
#define GL_TRIANGLE_STRIP	0x0005
#define GL_TRIANGLE_FAN	0x0006
#define GL_NEVER	0x0200
#define GL_LESS	0x0201
#define GL_EQUAL	0x0202
#define GL_LEQUAL	0x0203
#define GL_GREATER	0x0204
#define GL_NOTEQUAL	0x0205
#define GL_GEQUAL	0x0206
#define GL_ALWAYS	0x0207
#define GL_ZERO	0
#define GL_ONE	1
#define GL_SRC_COLOR	0x0300
#define GL_ONE_MINUS_SRC_COLOR	0x0301
#define GL_SRC_ALPHA	0x0302
#define GL_ONE_MINUS_SRC_ALPHA	0x0303
#define GL_DST_ALPHA	0x0304
#define GL_ONE_MINUS_DST_ALPHA	0x0305
#define GL_DST_COLOR	0x0306
#define GL_ONE_MINUS_DST_COLOR	0x0307
#define GL_SRC_ALPHA_SATURATE	0x0308
#define GL_NONE	0
#define GL_FRONT_LEFT	0x0400
#define GL_FRONT_RIGHT	0x0401
#define GL_BACK_LEFT	0x0402
#define GL_BACK_RIGHT	0x0403
#define GL_FRONT	0x0404
#define GL_BACK	0x0405
#define GL_LEFT	0x0406
#define GL_RIGHT	0x0407
#define GL_FRONT_AND_BACK	0x0408
#define GL_NO_ERROR	0
#define GL_INVALID_ENUM	0x0500
#define GL_INVALID_VALUE	0x0501
#define GL_INVALID_OPERATION	0x0502
#define GL_OUT_OF_MEMORY	0x0505
#define GL_CW	0x0900
#define GL_CCW	0x0901
#define GL_POINT_SIZE	0x0B11
#define GL_POINT_SIZE_RANGE	0x0B12
#define GL_POINT_SIZE_GRANULARITY	0x0B13
#define GL_LINE_SMOOTH	0x0B20
#define GL_LINE_WIDTH	0x0B21
#define GL_LINE_WIDTH_RANGE	0x0B22
#define GL_LINE_WIDTH_GRANULARITY	0x0B23
#define GL_POLYGON_SMOOTH	0x0B41
#define GL_CULL_FACE	0x0B44
#define GL_CULL_FACE_MODE	0x0B45
#define GL_FRONT_FACE	0x0B46
#define GL_DEPTH_RANGE	0x0B70
#define GL_DEPTH_TEST	0x0B71
#define GL_DEPTH_WRITEMASK	0x0B72
#define GL_DEPTH_CLEAR_VALUE	0x0B73
#define GL_DEPTH_FUNC	0x0B74
#define GL_STENCIL_TEST	0x0B90
#define GL_STENCIL_CLEAR_VALUE	0x0B91
#define GL_STENCIL_FUNC	0x0B92
#define GL_STENCIL_VALUE_MASK	0x0B93
#define GL_STENCIL_FAIL	0x0B94
#define GL_STENCIL_PASS_DEPTH_FAIL	0x0B95
#define GL_STENCIL_PASS_DEPTH_PASS	0x0B96
#define GL_STENCIL_REF	0x0B97
#define GL_STENCIL_WRITEMASK	0x0B98
#define GL_VIEWPORT	0x0BA2
#define GL_DITHER	0x0BD0
#define GL_BLEND_DST	0x0BE0
#define GL_BLEND_SRC	0x0BE1
#define GL_BLEND	0x0BE2
#define GL_LOGIC_OP_MODE	0x0BF0
#define GL_COLOR_LOGIC_OP	0x0BF2
#define GL_DRAW_BUFFER	0x0C01
#define GL_READ_BUFFER	0x0C02
#define GL_SCISSOR_BOX	0x0C10
#define GL_SCISSOR_TEST	0x0C11
#define GL_COLOR_CLEAR_VALUE	0x0C22
#define GL_COLOR_WRITEMASK	0x0C23
#define GL_DOUBLEBUFFER	0x0C32
#define GL_STEREO	0x0C33
#define GL_LINE_SMOOTH_HINT	0x0C52
#define GL_POLYGON_SMOOTH_HINT	0x0C53
#define GL_UNPACK_SWAP_BYTES	0x0CF0
#define GL_UNPACK_LSB_FIRST	0x0CF1
#define GL_UNPACK_ROW_LENGTH	0x0CF2
#define GL_UNPACK_SKIP_ROWS	0x0CF3
#define GL_UNPACK_SKIP_PIXELS	0x0CF4
#define GL_UNPACK_ALIGNMENT	0x0CF5
#define GL_PACK_SWAP_BYTES	0x0D00
#define GL_PACK_LSB_FIRST	0x0D01
#define GL_PACK_ROW_LENGTH	0x0D02
#define GL_PACK_SKIP_ROWS	0x0D03
#define GL_PACK_SKIP_PIXELS	0x0D04
#define GL_PACK_ALIGNMENT	0x0D05
#define GL_MAX_TEXTURE_SIZE	0x0D33
#define GL_MAX_VIEWPORT_DIMS	0x0D3A
#define GL_SUBPIXEL_BITS	0x0D50
#define GL_TEXTURE_1D	0x0DE0
#define GL_TEXTURE_2D	0x0DE1
#define GL_POLYGON_OFFSET_UNITS	0x2A00
#define GL_POLYGON_OFFSET_POINT	0x2A01
#define GL_POLYGON_OFFSET_LINE	0x2A02
#define GL_POLYGON_OFFSET_FILL	0x8037
#define GL_POLYGON_OFFSET_FACTOR	0x8038
#define GL_TEXTURE_BINDING_1D	0x8068
#define GL_TEXTURE_BINDING_2D	0x8069
#define GL_TEXTURE_WIDTH	0x1000
#define GL_TEXTURE_HEIGHT	0x1001
#define GL_TEXTURE_INTERNAL_FORMAT	0x1003
#define GL_TEXTURE_BORDER_COLOR	0x1004
#define GL_TEXTURE_RED_SIZE	0x805C
#define GL_TEXTURE_GREEN_SIZE	0x805D
#define GL_TEXTURE_BLUE_SIZE	0x805E
#define GL_TEXTURE_ALPHA_SIZE	0x805F
#define GL_DONT_CARE	0x1100
#define GL_FASTEST	0x1101
#define GL_NICEST	0x1102
#define GL_BYTE	0x1400
#define GL_UNSIGNED_BYTE	0x1401
#define GL_SHORT	0x1402
#define GL_UNSIGNED_SHORT	0x1403
#define GL_INT	0x1404
#define GL_UNSIGNED_INT	0x1405
#define GL_FLOAT	0x1406
#define GL_DOUBLE	0x140A
#define GL_CLEAR	0x1500
#define GL_AND	0x1501
#define GL_AND_REVERSE	0x1502
#define GL_COPY	0x1503
#define GL_AND_INVERTED	0x1504
#define GL_NOOP	0x1505
#define GL_XOR	0x1506
#define GL_OR	0x1507
#define GL_NOR	0x1508
#define GL_EQUIV	0x1509
#define GL_INVERT	0x150A
#define GL_OR_REVERSE	0x150B
#define GL_COPY_INVERTED	0x150C
#define GL_OR_INVERTED	0x150D
#define GL_NAND	0x150E
#define GL_SET	0x150F
#define GL_TEXTURE	0x1702
#define GL_COLOR	0x1800
#define GL_DEPTH	0x1801
#define GL_STENCIL	0x1802
#define GL_STENCIL_INDEX	0x1901
#define GL_DEPTH_COMPONENT	0x1902
#define GL_RED	0x1903
#define GL_GREEN	0x1904
#define GL_BLUE	0x1905
#define GL_ALPHA	0x1906
#define GL_RGB	0x1907
#define GL_RGBA	0x1908
#define GL_POINT	0x1B00
#define GL_LINE	0x1B01
#define GL_FILL	0x1B02
#define GL_KEEP	0x1E00
#define GL_REPLACE	0x1E01
#define GL_INCR	0x1E02
#define GL_DECR	0x1E03
#define GL_VENDOR	0x1F00
#define GL_RENDERER	0x1F01
#define GL_VERSION	0x1F02
#define GL_EXTENSIONS	0x1F03
#define GL_NEAREST	0x2600
#define GL_LINEAR	0x2601
#define GL_NEAREST_MIPMAP_NEAREST	0x2700
#define GL_LINEAR_MIPMAP_NEAREST	0x2701
#define GL_NEAREST_MIPMAP_LINEAR	0x2702
#define GL_LINEAR_MIPMAP_LINEAR	0x2703
#define GL_TEXTURE_MAG_FILTER	0x2800
#define GL_TEXTURE_MIN_FILTER	0x2801
#define GL_TEXTURE_WRAP_S	0x2802
#define GL_TEXTURE_WRAP_T	0x2803
#define GL_PROXY_TEXTURE_1D	0x8063
#define GL_PROXY_TEXTURE_2D	0x8064
#define GL_REPEAT	0x2901
#define GL_R3_G3_B2	0x2A10
#define GL_RGB4	0x804F
#define GL_RGB5	0x8050
#define GL_RGB8	0x8051
#define GL_RGB10	0x8052
#define GL_RGB12	0x8053
#define GL_RGB16	0x8054
#define GL_RGBA2	0x8055
#define GL_RGBA4	0x8056
#define GL_RGB5_A1	0x8057
#define GL_RGBA8	0x8058
#define GL_RGB10_A2	0x8059
#define GL_RGBA12	0x805A
#define GL_RGBA16	0x805B

// GL_VERSION_1_2
#define GL_UNSIGNED_BYTE_3_3_2	0x8032
#define GL_UNSIGNED_SHORT_4_4_4_4	0x8033
#define GL_UNSIGNED_SHORT_5_5_5_1	0x8034
#define GL_UNSIGNED_INT_8_8_8_8	0x8035
#define GL_UNSIGNED_INT_10_10_10_2	0x8036
#define GL_TEXTURE_BINDING_3D	0x806A
#define GL_PACK_SKIP_IMAGES	0x806B
#define GL_PACK_IMAGE_HEIGHT	0x806C
#define GL_UNPACK_SKIP_IMAGES	0x806D
#define GL_UNPACK_IMAGE_HEIGHT	0x806E
#define GL_TEXTURE_3D	0x806F
#define GL_PROXY_TEXTURE_3D	0x8070
#define GL_TEXTURE_DEPTH	0x8071
#define GL_TEXTURE_WRAP_R	0x8072
#define GL_MAX_3D_TEXTURE_SIZE	0x8073
#define GL_UNSIGNED_BYTE_2_3_3_REV	0x8362
#define GL_UNSIGNED_SHORT_5_6_5	0x8363
#define GL_UNSIGNED_SHORT_5_6_5_REV	0x8364
#define GL_UNSIGNED_SHORT_4_4_4_4_REV	0x8365
#define GL_UNSIGNED_SHORT_1_5_5_5_REV	0x8366
#define GL_UNSIGNED_INT_8_8_8_8_REV	0x8367
#define GL_UNSIGNED_INT_2_10_10_10_REV	0x8368
#define GL_BGR	0x80E0
#define GL_BGRA	0x80E1
#define GL_MAX_ELEMENTS_VERTICES	0x80E8
#define GL_MAX_ELEMENTS_INDICES	0x80E9
#define GL_CLAMP_TO_EDGE	0x812F
#define GL_TEXTURE_MIN_LOD	0x813A
#define GL_TEXTURE_MAX_LOD	0x813B
#define GL_TEXTURE_BASE_LEVEL	0x813C
#define GL_TEXTURE_MAX_LEVEL	0x813D
#define GL_SMOOTH_POINT_SIZE_RANGE	0x0B12
#define GL_SMOOTH_POINT_SIZE_GRANULARITY	0x0B13
#define GL_SMOOTH_LINE_WIDTH_RANGE	0x0B22
#define GL_SMOOTH_LINE_WIDTH_GRANULARITY	0x0B23
#define GL_ALIASED_LINE_WIDTH_RANGE	0x846E

// GL_VERSION_1_3
#define GL_TEXTURE0	0x84C0
#define GL_TEXTURE1	0x84C1
#define GL_TEXTURE2	0x84C2
#define GL_TEXTURE3	0x84C3
#define GL_TEXTURE4	0x84C4
#define GL_TEXTURE5	0x84C5
#define GL_TEXTURE6	0x84C6
#define GL_TEXTURE7	0x84C7
#define GL_TEXTURE8	0x84C8
#define GL_TEXTURE9	0x84C9
#define GL_TEXTURE10	0x84CA
#define GL_TEXTURE11	0x84CB
#define GL_TEXTURE12	0x84CC
#define GL_TEXTURE13	0x84CD
#define GL_TEXTURE14	0x84CE
#define GL_TEXTURE15	0x84CF
#define GL_TEXTURE16	0x84D0
#define GL_TEXTURE17	0x84D1
#define GL_TEXTURE18	0x84D2
#define GL_TEXTURE19	0x84D3
#define GL_TEXTURE20	0x84D4
#define GL_TEXTURE21	0x84D5
#define GL_TEXTURE22	0x84D6
#define GL_TEXTURE23	0x84D7
#define GL_TEXTURE24	0x84D8
#define GL_TEXTURE25	0x84D9
#define GL_TEXTURE26	0x84DA
#define GL_TEXTURE27	0x84DB
#define GL_TEXTURE28	0x84DC
#define GL_TEXTURE29	0x84DD
#define GL_TEXTURE30	0x84DE
#define GL_TEXTURE31	0x84DF
#define GL_ACTIVE_TEXTURE	0x84E0
#define GL_MULTISAMPLE	0x809D
#define GL_SAMPLE_ALPHA_TO_COVERAGE	0x809E
#define GL_SAMPLE_ALPHA_TO_ONE	0x809F
#define GL_SAMPLE_COVERAGE	0x80A0
#define GL_SAMPLE_BUFFERS	0x80A8
#define GL_SAMPLES	0x80A9
#define GL_SAMPLE_COVERAGE_VALUE	0x80AA
#define GL_SAMPLE_COVERAGE_INVERT	0x80AB
#define GL_TEXTURE_CUBE_MAP	0x8513
#define GL_TEXTURE_BINDING_CUBE_MAP	0x8514
#define GL_TEXTURE_CUBE_MAP_POSITIVE_X	0x8515
#define GL_TEXTURE_CUBE_MAP_NEGATIVE_X	0x8516
#define GL_TEXTURE_CUBE_MAP_POSITIVE_Y	0x8517
#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Y	0x8518
#define GL_TEXTURE_CUBE_MAP_POSITIVE_Z	0x8519
#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Z	0x851A
#define GL_PROXY_TEXTURE_CUBE_MAP	0x851B
#define GL_MAX_CUBE_MAP_TEXTURE_SIZE	0x851C
#define GL_COMPRESSED_RGB	0x84ED
#define GL_COMPRESSED_RGBA	0x84EE
#define GL_TEXTURE_COMPRESSION_HINT	0x84EF
#define GL_TEXTURE_COMPRESSED_IMAGE_SIZE	0x86A0
#define GL_TEXTURE_COMPRESSED	0x86A1
#define GL_NUM_COMPRESSED_TEXTURE_FORMATS	0x86A2
#define GL_COMPRESSED_TEXTURE_FORMATS	0x86A3
#define GL_CLAMP_TO_BORDER	0x812D

// GL_VERSION_1_4
#define GL_BLEND_DST_RGB	0x80C8
#define GL_BLEND_SRC_RGB	0x80C9
#define GL_BLEND_DST_ALPHA	0x80CA
#define GL_BLEND_SRC_ALPHA	0x80CB
#define GL_POINT_FADE_THRESHOLD_SIZE	0x8128
#define GL_DEPTH_COMPONENT16	0x81A5
#define GL_DEPTH_COMPONENT24	0x81A6
#define GL_DEPTH_COMPONENT32	0x81A7
#define GL_MIRRORED_REPEAT	0x8370
#define GL_MAX_TEXTURE_LOD_BIAS	0x84FD
#define GL_TEXTURE_LOD_BIAS	0x8501
#define GL_INCR_WRAP	0x8507
#define GL_DECR_WRAP	0x8508
#define GL_TEXTURE_DEPTH_SIZE	0x884A
#define GL_TEXTURE_COMPARE_MODE	0x884C
#define GL_TEXTURE_COMPARE_FUNC	0x884D

// GL_VERSION_1_5
#define GL_BUFFER_SIZE	0x8764
#define GL_BUFFER_USAGE	0x8765
#define GL_QUERY_COUNTER_BITS	0x8864
#define GL_CURRENT_QUERY	0x8865
#define GL_QUERY_RESULT	0x8866
#define GL_QUERY_RESULT_AVAILABLE	0x8867
#define GL_ARRAY_BUFFER	0x8892
#define GL_ELEMENT_ARRAY_BUFFER	0x8893
#define GL_ARRAY_BUFFER_BINDING	0x8894
#define GL_ELEMENT_ARRAY_BUFFER_BINDING	0x8895
#define GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING	0x889F
#define GL_READ_ONLY	0x88B8
#define GL_WRITE_ONLY	0x88B9
#define GL_READ_WRITE	0x88BA
#define GL_BUFFER_ACCESS	0x88BB
#define GL_BUFFER_MAPPED	0x88BC
#define GL_BUFFER_MAP_POINTER	0x88BD
#define GL_STREAM_DRAW	0x88E0
#define GL_STREAM_READ	0x88E1
#define GL_STREAM_COPY	0x88E2
#define GL_STATIC_DRAW	0x88E4
#define GL_STATIC_READ	0x88E5
#define GL_STATIC_COPY	0x88E6
#define GL_DYNAMIC_DRAW	0x88E8
#define GL_DYNAMIC_READ	0x88E9
#define GL_DYNAMIC_COPY	0x88EA
#define GL_SAMPLES_PASSED	0x8914

// GL_VERSION_2_0
#define GL_BLEND_EQUATION_RGB	0x8009
#define GL_VERTEX_ATTRIB_ARRAY_ENABLED	0x8622
#define GL_VERTEX_ATTRIB_ARRAY_SIZE	0x8623
#define GL_VERTEX_ATTRIB_ARRAY_STRIDE	0x8624
#define GL_VERTEX_ATTRIB_ARRAY_TYPE	0x8625
#define GL_CURRENT_VERTEX_ATTRIB	0x8626
#define GL_VERTEX_PROGRAM_POINT_SIZE	0x8642
#define GL_VERTEX_ATTRIB_ARRAY_POINTER	0x8645
#define GL_STENCIL_BACK_FUNC	0x8800
#define GL_STENCIL_BACK_FAIL	0x8801
#define GL_STENCIL_BACK_PASS_DEPTH_FAIL	0x8802
#define GL_STENCIL_BACK_PASS_DEPTH_PASS	0x8803
#define GL_MAX_DRAW_BUFFERS	0x8824
#define GL_DRAW_BUFFER0	0x8825
#define GL_DRAW_BUFFER1	0x8826
#define GL_DRAW_BUFFER2	0x8827
#define GL_DRAW_BUFFER3	0x8828
#define GL_DRAW_BUFFER4	0x8829
#define GL_DRAW_BUFFER5	0x882A
#define GL_DRAW_BUFFER6	0x882B
#define GL_DRAW_BUFFER7	0x882C
#define GL_DRAW_BUFFER8	0x882D
#define GL_DRAW_BUFFER9	0x882E
#define GL_DRAW_BUFFER10	0x882F
#define GL_DRAW_BUFFER11	0x8830
#define GL_DRAW_BUFFER12	0x8831
#define GL_DRAW_BUFFER13	0x8832
#define GL_DRAW_BUFFER14	0x8833
#define GL_DRAW_BUFFER15	0x8834
#define GL_BLEND_EQUATION_ALPHA	0x883D
#define GL_MAX_VERTEX_ATTRIBS	0x8869
#define GL_VERTEX_ATTRIB_ARRAY_NORMALIZED	0x886A
#define GL_MAX_TEXTURE_IMAGE_UNITS	0x8872
#define GL_FRAGMENT_SHADER	0x8B30
#define GL_VERTEX_SHADER	0x8B31
#define GL_MAX_FRAGMENT_UNIFORM_COMPONENTS	0x8B49
#define GL_MAX_VERTEX_UNIFORM_COMPONENTS	0x8B4A
#define GL_MAX_VARYING_FLOATS	0x8B4B
#define GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS	0x8B4C
#define GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS	0x8B4D
#define GL_SHADER_TYPE	0x8B4F
#define GL_FLOAT_VEC2	0x8B50
#define GL_FLOAT_VEC3	0x8B51
#define GL_FLOAT_VEC4	0x8B52
#define GL_INT_VEC2	0x8B53
#define GL_INT_VEC3	0x8B54
#define GL_INT_VEC4	0x8B55
#define GL_BOOL	0x8B56
#define GL_BOOL_VEC2	0x8B57
#define GL_BOOL_VEC3	0x8B58
#define GL_BOOL_VEC4	0x8B59
#define GL_FLOAT_MAT2	0x8B5A
#define GL_FLOAT_MAT3	0x8B5B
#define GL_FLOAT_MAT4	0x8B5C
#define GL_SAMPLER_1D	0x8B5D
#define GL_SAMPLER_2D	0x8B5E
#define GL_SAMPLER_3D	0x8B5F
#define GL_SAMPLER_CUBE	0x8B60
#define GL_SAMPLER_1D_SHADOW	0x8B61
#define GL_SAMPLER_2D_SHADOW	0x8B62
#define GL_DELETE_STATUS	0x8B80
#define GL_COMPILE_STATUS	0x8B81
#define GL_LINK_STATUS	0x8B82
#define GL_VALIDATE_STATUS	0x8B83
#define GL_INFO_LOG_LENGTH	0x8B84
#define GL_ATTACHED_SHADERS	0x8B85
#define GL_ACTIVE_UNIFORMS	0x8B86
#define GL_ACTIVE_UNIFORM_MAX_LENGTH	0x8B87
#define GL_SHADER_SOURCE_LENGTH	0x8B88
#define GL_ACTIVE_ATTRIBUTES	0x8B89
#define GL_ACTIVE_ATTRIBUTE_MAX_LENGTH	0x8B8A
#define GL_FRAGMENT_SHADER_DERIVATIVE_HINT	0x8B8B
#define GL_SHADING_LANGUAGE_VERSION	0x8B8C
#define GL_CURRENT_PROGRAM	0x8B8D
#define GL_POINT_SPRITE_COORD_ORIGIN	0x8CA0
#define GL_LOWER_LEFT	0x8CA1
#define GL_UPPER_LEFT	0x8CA2
#define GL_STENCIL_BACK_REF	0x8CA3
#define GL_STENCIL_BACK_VALUE_MASK	0x8CA4
#define GL_STENCIL_BACK_WRITEMASK	0x8CA5

// GL_VERSION_2_1
#define GL_PIXEL_PACK_BUFFER	0x88EB
#define GL_PIXEL_UNPACK_BUFFER	0x88EC
#define GL_PIXEL_PACK_BUFFER_BINDING	0x88ED
#define GL_PIXEL_UNPACK_BUFFER_BINDING	0x88EF
#define GL_FLOAT_MAT2x3	0x8B65
#define GL_FLOAT_MAT2x4	0x8B66
#define GL_FLOAT_MAT3x2	0x8B67
#define GL_FLOAT_MAT3x4	0x8B68
#define GL_FLOAT_MAT4x2	0x8B69
#define GL_FLOAT_MAT4x3	0x8B6A
#define GL_SRGB	0x8C40
#define GL_SRGB8	0x8C41
#define GL_SRGB_ALPHA	0x8C42
#define GL_SRGB8_ALPHA8	0x8C43
#define GL_COMPRESSED_SRGB	0x8C48
#define GL_COMPRESSED_SRGB_ALPHA	0x8C49

// GL_VERSION_3_0
#define GL_COMPARE_REF_TO_TEXTURE	0x884E
#define GL_CLIP_DISTANCE0	0x3000
#define GL_CLIP_DISTANCE1	0x3001
#define GL_CLIP_DISTANCE2	0x3002
#define GL_CLIP_DISTANCE3	0x3003
#define GL_CLIP_DISTANCE4	0x3004
#define GL_CLIP_DISTANCE5	0x3005
#define GL_CLIP_DISTANCE6	0x3006
#define GL_CLIP_DISTANCE7	0x3007
#define GL_MAX_CLIP_DISTANCES	0x0D32
#define GL_MAJOR_VERSION	0x821B
#define GL_MINOR_VERSION	0x821C
#define GL_NUM_EXTENSIONS	0x821D
#define GL_CONTEXT_FLAGS	0x821E
#define GL_DEPTH_BUFFER	0x8223
#define GL_STENCIL_BUFFER	0x8224
#define GL_COMPRESSED_RED	0x8225
#define GL_COMPRESSED_RG	0x8226
#define GL_CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT	0x0001
#define GL_RGBA32F	0x8814
#define GL_RGB32F	0x8815
#define GL_RGBA16F	0x881A
#define GL_RGB16F	0x881B
#define GL_VERTEX_ATTRIB_ARRAY_INTEGER	0x88FD
#define GL_MAX_ARRAY_TEXTURE_LAYERS	0x88FF
#define GL_MIN_PROGRAM_TEXEL_OFFSET	0x8904
#define GL_MAX_PROGRAM_TEXEL_OFFSET	0x8905
#define GL_CLAMP_READ_COLOR	0x891C
#define GL_FIXED_ONLY	0x891D
#define GL_MAX_VARYING_COMPONENTS	0x8B4B
#define GL_TEXTURE_1D_ARRAY	0x8C18
#define GL_PROXY_TEXTURE_1D_ARRAY	0x8C19
#define GL_TEXTURE_2D_ARRAY	0x8C1A
#define GL_PROXY_TEXTURE_2D_ARRAY	0x8C1B
#define GL_TEXTURE_BINDING_1D_ARRAY	0x8C1C
#define GL_TEXTURE_BINDING_2D_ARRAY	0x8C1D
#define GL_R11F_G11F_B10F	0x8C3A
#define GL_UNSIGNED_INT_10F_11F_11F_REV	0x8C3B
#define GL_RGB9_E5	0x8C3D
#define GL_UNSIGNED_INT_5_9_9_9_REV	0x8C3E
#define GL_TEXTURE_SHARED_SIZE	0x8C3F
#define GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH	0x8C76
#define GL_TRANSFORM_FEEDBACK_BUFFER_MODE	0x8C7F
#define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS	0x8C80
#define GL_TRANSFORM_FEEDBACK_VARYINGS	0x8C83
#define GL_TRANSFORM_FEEDBACK_BUFFER_START	0x8C84
#define GL_TRANSFORM_FEEDBACK_BUFFER_SIZE	0x8C85
#define GL_PRIMITIVES_GENERATED	0x8C87
#define GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN	0x8C88
#define GL_RASTERIZER_DISCARD	0x8C89
#define GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS	0x8C8A
#define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS	0x8C8B
#define GL_INTERLEAVED_ATTRIBS	0x8C8C
#define GL_SEPARATE_ATTRIBS	0x8C8D
#define GL_TRANSFORM_FEEDBACK_BUFFER	0x8C8E
#define GL_TRANSFORM_FEEDBACK_BUFFER_BINDING	0x8C8F
#define GL_RGBA32UI	0x8D70
#define GL_RGB32UI	0x8D71
#define GL_RGBA16UI	0x8D76
#define GL_RGB16UI	0x8D77
#define GL_RGBA8UI	0x8D7C
#define GL_RGB8UI	0x8D7D
#define GL_RGBA32I	0x8D82
#define GL_RGB32I	0x8D83
#define GL_RGBA16I	0x8D88
#define GL_RGB16I	0x8D89
#define GL_RGBA8I	0x8D8E
#define GL_RGB8I	0x8D8F
#define GL_RED_INTEGER	0x8D94
#define GL_GREEN_INTEGER	0x8D95
#define GL_BLUE_INTEGER	0x8D96
#define GL_RGB_INTEGER	0x8D98
#define GL_RGBA_INTEGER	0x8D99
#define GL_BGR_INTEGER	0x8D9A
#define GL_BGRA_INTEGER	0x8D9B
#define GL_SAMPLER_1D_ARRAY	0x8DC0
#define GL_SAMPLER_2D_ARRAY	0x8DC1
#define GL_SAMPLER_1D_ARRAY_SHADOW	0x8DC3
#define GL_SAMPLER_2D_ARRAY_SHADOW	0x8DC4
#define GL_SAMPLER_CUBE_SHADOW	0x8DC5
#define GL_UNSIGNED_INT_VEC2	0x8DC6
#define GL_UNSIGNED_INT_VEC3	0x8DC7
#define GL_UNSIGNED_INT_VEC4	0x8DC8
#define GL_INT_SAMPLER_1D	0x8DC9
#define GL_INT_SAMPLER_2D	0x8DCA
#define GL_INT_SAMPLER_3D	0x8DCB
#define GL_INT_SAMPLER_CUBE	0x8DCC
#define GL_INT_SAMPLER_1D_ARRAY	0x8DCE
#define GL_INT_SAMPLER_2D_ARRAY	0x8DCF
#define GL_UNSIGNED_INT_SAMPLER_1D	0x8DD1
#define GL_UNSIGNED_INT_SAMPLER_2D	0x8DD2
#define GL_UNSIGNED_INT_SAMPLER_3D	0x8DD3
#define GL_UNSIGNED_INT_SAMPLER_CUBE	0x8DD4
#define GL_UNSIGNED_INT_SAMPLER_1D_ARRAY	0x8DD6
#define GL_UNSIGNED_INT_SAMPLER_2D_ARRAY	0x8DD7
#define GL_QUERY_WAIT	0x8E13
#define GL_QUERY_NO_WAIT	0x8E14
#define GL_QUERY_BY_REGION_WAIT	0x8E15
#define GL_QUERY_BY_REGION_NO_WAIT	0x8E16
#define GL_BUFFER_ACCESS_FLAGS	0x911F
#define GL_BUFFER_MAP_LENGTH	0x9120
#define GL_BUFFER_MAP_OFFSET	0x9121

// GL_ARB_depth_buffer_float
#define GL_DEPTH_COMPONENT32F	0x8CAC
#define GL_DEPTH32F_STENCIL8	0x8CAD
#define GL_FLOAT_32_UNSIGNED_INT_24_8_REV	0x8DAD

// GL_ARB_framebuffer_object
#define GL_INVALID_FRAMEBUFFER_OPERATION	0x0506
#define GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING	0x8210
#define GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE	0x8211
#define GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE	0x8212
#define GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE	0x8213
#define GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE	0x8214
#define GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE	0x8215
#define GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE	0x8216
#define GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE	0x8217
#define GL_FRAMEBUFFER_DEFAULT	0x8218
#define GL_FRAMEBUFFER_UNDEFINED	0x8219
#define GL_DEPTH_STENCIL_ATTACHMENT	0x821A
#define GL_MAX_RENDERBUFFER_SIZE	0x84E8
#define GL_DEPTH_STENCIL	0x84F9
#define GL_UNSIGNED_INT_24_8	0x84FA
#define GL_DEPTH24_STENCIL8	0x88F0
#define GL_TEXTURE_STENCIL_SIZE	0x88F1
#define GL_TEXTURE_RED_TYPE	0x8C10
#define GL_TEXTURE_GREEN_TYPE	0x8C11
#define GL_TEXTURE_BLUE_TYPE	0x8C12
#define GL_TEXTURE_ALPHA_TYPE	0x8C13
#define GL_TEXTURE_DEPTH_TYPE	0x8C16
#define GL_UNSIGNED_NORMALIZED	0x8C17
#define GL_FRAMEBUFFER_BINDING	0x8CA6
#define GL_DRAW_FRAMEBUFFER_BINDING	GL_FRAMEBUFFER_BINDING
#define GL_RENDERBUFFER_BINDING	0x8CA7
#define GL_READ_FRAMEBUFFER	0x8CA8
#define GL_DRAW_FRAMEBUFFER	0x8CA9
#define GL_READ_FRAMEBUFFER_BINDING	0x8CAA
#define GL_RENDERBUFFER_SAMPLES	0x8CAB
#define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE	0x8CD0
#define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME	0x8CD1
#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL	0x8CD2
#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE	0x8CD3
#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER	0x8CD4
#define GL_FRAMEBUFFER_COMPLETE	0x8CD5
#define GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT	0x8CD6
#define GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT	0x8CD7
#define GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER	0x8CDB
#define GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER	0x8CDC
#define GL_FRAMEBUFFER_UNSUPPORTED	0x8CDD
#define GL_MAX_COLOR_ATTACHMENTS	0x8CDF
#define GL_COLOR_ATTACHMENT0	0x8CE0
#define GL_COLOR_ATTACHMENT1	0x8CE1
#define GL_COLOR_ATTACHMENT2	0x8CE2
#define GL_COLOR_ATTACHMENT3	0x8CE3
#define GL_COLOR_ATTACHMENT4	0x8CE4
#define GL_COLOR_ATTACHMENT5	0x8CE5
#define GL_COLOR_ATTACHMENT6	0x8CE6
#define GL_COLOR_ATTACHMENT7	0x8CE7
#define GL_COLOR_ATTACHMENT8	0x8CE8
#define GL_COLOR_ATTACHMENT9	0x8CE9
#define GL_COLOR_ATTACHMENT10	0x8CEA
#define GL_COLOR_ATTACHMENT11	0x8CEB
#define GL_COLOR_ATTACHMENT12	0x8CEC
#define GL_COLOR_ATTACHMENT13	0x8CED
#define GL_COLOR_ATTACHMENT14	0x8CEE
#define GL_COLOR_ATTACHMENT15	0x8CEF
#define GL_DEPTH_ATTACHMENT	0x8D00
#define GL_STENCIL_ATTACHMENT	0x8D20
#define GL_FRAMEBUFFER	0x8D40
#define GL_RENDERBUFFER	0x8D41
#define GL_RENDERBUFFER_WIDTH	0x8D42
#define GL_RENDERBUFFER_HEIGHT	0x8D43
#define GL_RENDERBUFFER_INTERNAL_FORMAT	0x8D44
#define GL_STENCIL_INDEX1	0x8D46
#define GL_STENCIL_INDEX4	0x8D47
#define GL_STENCIL_INDEX8	0x8D48
#define GL_STENCIL_INDEX16	0x8D49
#define GL_RENDERBUFFER_RED_SIZE	0x8D50
#define GL_RENDERBUFFER_GREEN_SIZE	0x8D51
#define GL_RENDERBUFFER_BLUE_SIZE	0x8D52
#define GL_RENDERBUFFER_ALPHA_SIZE	0x8D53
#define GL_RENDERBUFFER_DEPTH_SIZE	0x8D54
#define GL_RENDERBUFFER_STENCIL_SIZE	0x8D55
#define GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE	0x8D56
#define GL_MAX_SAMPLES	0x8D57

// GL_ARB_framebuffer_sRGB
#define GL_FRAMEBUFFER_SRGB	0x8DB9

// GL_ARB_half_float_vertex
#define GL_HALF_FLOAT	0x140B

// GL_ARB_map_buffer_range
#define GL_MAP_READ_BIT	0x0001
#define GL_MAP_WRITE_BIT	0x0002
#define GL_MAP_INVALIDATE_RANGE_BIT	0x0004
#define GL_MAP_INVALIDATE_BUFFER_BIT	0x0008
#define GL_MAP_FLUSH_EXPLICIT_BIT	0x0010
#define GL_MAP_UNSYNCHRONIZED_BIT	0x0020

// GL_ARB_texture_compression_rgtc
#define GL_COMPRESSED_RED_RGTC1	0x8DBB
#define GL_COMPRESSED_SIGNED_RED_RGTC1	0x8DBC
#define GL_COMPRESSED_RG_RGTC2	0x8DBD
#define GL_COMPRESSED_SIGNED_RG_RGTC2	0x8DBE

// GL_ARB_texture_rg
#define GL_RG	0x8227
#define GL_RG_INTEGER	0x8228
#define GL_R8	0x8229
#define GL_R16	0x822A
#define GL_RG8	0x822B
#define GL_RG16	0x822C
#define GL_R16F	0x822D
#define GL_R32F	0x822E
#define GL_RG16F	0x822F
#define GL_RG32F	0x8230
#define GL_R8I	0x8231
#define GL_R8UI	0x8232
#define GL_R16I	0x8233
#define GL_R16UI	0x8234
#define GL_R32I	0x8235
#define GL_R32UI	0x8236
#define GL_RG8I	0x8237
#define GL_RG8UI	0x8238
#define GL_RG16I	0x8239
#define GL_RG16UI	0x823A
#define GL_RG32I	0x823B
#define GL_RG32UI	0x823C

// GL_ARB_vertex_array_object
#define GL_VERTEX_ARRAY_BINDING	0x85B5

// GL_VERSION_3_1
#define GL_SAMPLER_2D_RECT	0x8B63
#define GL_SAMPLER_2D_RECT_SHADOW	0x8B64
#define GL_SAMPLER_BUFFER	0x8DC2
#define GL_INT_SAMPLER_2D_RECT	0x8DCD
#define GL_INT_SAMPLER_BUFFER	0x8DD0
#define GL_UNSIGNED_INT_SAMPLER_2D_RECT	0x8DD5
#define GL_UNSIGNED_INT_SAMPLER_BUFFER	0x8DD8
#define GL_TEXTURE_BUFFER	0x8C2A
#define GL_MAX_TEXTURE_BUFFER_SIZE	0x8C2B
#define GL_TEXTURE_BINDING_BUFFER	0x8C2C
#define GL_TEXTURE_BUFFER_DATA_STORE_BINDING	0x8C2D
#define GL_TEXTURE_BUFFER_FORMAT	0x8C2E
#define GL_TEXTURE_RECTANGLE	0x84F5
#define GL_TEXTURE_BINDING_RECTANGLE	0x84F6
#define GL_PROXY_TEXTURE_RECTANGLE	0x84F7
#define GL_MAX_RECTANGLE_TEXTURE_SIZE	0x84F8
#define GL_RED_SNORM	0x8F90
#define GL_RG_SNORM	0x8F91
#define GL_RGB_SNORM	0x8F92
#define GL_RGBA_SNORM	0x8F93
#define GL_R8_SNORM	0x8F94
#define GL_RG8_SNORM	0x8F95
#define GL_RGB8_SNORM	0x8F96
#define GL_RGBA8_SNORM	0x8F97
#define GL_R16_SNORM	0x8F98
#define GL_RG16_SNORM	0x8F99
#define GL_RGB16_SNORM	0x8F9A
#define GL_RGBA16_SNORM	0x8F9B
#define GL_SIGNED_NORMALIZED	0x8F9C
#define GL_PRIMITIVE_RESTART	0x8F9D
#define GL_PRIMITIVE_RESTART_INDEX	0x8F9E

// GL_ARB_copy_buffer
#define GL_COPY_READ_BUFFER	0x8F36
#define GL_COPY_WRITE_BUFFER	0x8F37

// GL_ARB_uniform_buffer_object
#define GL_UNIFORM_BUFFER	0x8A11
#define GL_UNIFORM_BUFFER_BINDING	0x8A28
#define GL_UNIFORM_BUFFER_START	0x8A29
#define GL_UNIFORM_BUFFER_SIZE	0x8A2A
#define GL_MAX_VERTEX_UNIFORM_BLOCKS	0x8A2B
#define GL_MAX_FRAGMENT_UNIFORM_BLOCKS	0x8A2D
#define GL_MAX_COMBINED_UNIFORM_BLOCKS	0x8A2E
#define GL_MAX_UNIFORM_BUFFER_BINDINGS	0x8A2F
#define GL_MAX_UNIFORM_BLOCK_SIZE	0x8A30
#define GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS	0x8A31
#define GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS	0x8A33
#define GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT	0x8A34
#define GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH	0x8A35
#define GL_ACTIVE_UNIFORM_BLOCKS	0x8A36
#define GL_UNIFORM_TYPE	0x8A37
#define GL_UNIFORM_SIZE	0x8A38
#define GL_UNIFORM_NAME_LENGTH	0x8A39
#define GL_UNIFORM_BLOCK_INDEX	0x8A3A
#define GL_UNIFORM_OFFSET	0x8A3B
#define GL_UNIFORM_ARRAY_STRIDE	0x8A3C
#define GL_UNIFORM_MATRIX_STRIDE	0x8A3D
#define GL_UNIFORM_IS_ROW_MAJOR	0x8A3E
#define GL_UNIFORM_BLOCK_BINDING	0x8A3F
#define GL_UNIFORM_BLOCK_DATA_SIZE	0x8A40
#define GL_UNIFORM_BLOCK_NAME_LENGTH	0x8A41
#define GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS	0x8A42
#define GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES	0x8A43
#define GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER	0x8A44
#define GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER	0x8A46
#define GL_INVALID_INDEX	0xFFFFFFFFu

// GL_VERSION_3_2
#define GL_CONTEXT_CORE_PROFILE_BIT	0x00000001
#define GL_CONTEXT_COMPATIBILITY_PROFILE_BIT	0x00000002
#define GL_LINES_ADJACENCY	0x000A
#define GL_LINE_STRIP_ADJACENCY	0x000B
#define GL_TRIANGLES_ADJACENCY	0x000C
#define GL_TRIANGLE_STRIP_ADJACENCY	0x000D
#define GL_PROGRAM_POINT_SIZE	0x8642
#define GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS	0x8C29
#define GL_FRAMEBUFFER_ATTACHMENT_LAYERED	0x8DA7
#define GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS	0x8DA8
#define GL_GEOMETRY_SHADER	0x8DD9
#define GL_GEOMETRY_VERTICES_OUT	0x8916
#define GL_GEOMETRY_INPUT_TYPE	0x8917
#define GL_GEOMETRY_OUTPUT_TYPE	0x8918
#define GL_MAX_GEOMETRY_UNIFORM_COMPONENTS	0x8DDF
#define GL_MAX_GEOMETRY_OUTPUT_VERTICES	0x8DE0
#define GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS	0x8DE1
#define GL_MAX_VERTEX_OUTPUT_COMPONENTS	0x9122
#define GL_MAX_GEOMETRY_INPUT_COMPONENTS	0x9123
#define GL_MAX_GEOMETRY_OUTPUT_COMPONENTS	0x9124
#define GL_MAX_FRAGMENT_INPUT_COMPONENTS	0x9125
#define GL_CONTEXT_PROFILE_MASK	0x9126

// GL_ARB_depth_clamp
#define GL_DEPTH_CLAMP	0x864F

// GL_ARB_provoking_vertex
#define GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION	0x8E4C
#define GL_FIRST_VERTEX_CONVENTION	0x8E4D
#define GL_LAST_VERTEX_CONVENTION	0x8E4E
#define GL_PROVOKING_VERTEX	0x8E4F

// GL_ARB_seamless_cube_map
#define GL_TEXTURE_CUBE_MAP_SEAMLESS	0x884F

// GL_ARB_sync
#define GL_MAX_SERVER_WAIT_TIMEOUT	0x9111
#define GL_OBJECT_TYPE	0x9112
#define GL_SYNC_CONDITION	0x9113
#define GL_SYNC_STATUS	0x9114
#define GL_SYNC_FLAGS	0x9115
#define GL_SYNC_FENCE	0x9116
#define GL_SYNC_GPU_COMMANDS_COMPLETE	0x9117
#define GL_UNSIGNALED	0x9118
#define GL_SIGNALED	0x9119
#define GL_ALREADY_SIGNALED	0x911A
#define GL_TIMEOUT_EXPIRED	0x911B
#define GL_CONDITION_SATISFIED	0x911C
#define GL_WAIT_FAILED	0x911D
#define GL_TIMEOUT_IGNORED	0xFFFFFFFFFFFFFFFFull
#define GL_SYNC_FLUSH_COMMANDS_BIT	0x00000001

// GL_ARB_texture_multisample
#define GL_SAMPLE_POSITION	0x8E50
#define GL_SAMPLE_MASK	0x8E51
#define GL_SAMPLE_MASK_VALUE	0x8E52
#define GL_MAX_SAMPLE_MASK_WORDS	0x8E59
#define GL_TEXTURE_2D_MULTISAMPLE	0x9100
#define GL_PROXY_TEXTURE_2D_MULTISAMPLE	0x9101
#define GL_TEXTURE_2D_MULTISAMPLE_ARRAY	0x9102
#define GL_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY	0x9103
#define GL_TEXTURE_BINDING_2D_MULTISAMPLE	0x9104
#define GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY	0x9105
#define GL_TEXTURE_SAMPLES	0x9106
#define GL_TEXTURE_FIXED_SAMPLE_LOCATIONS	0x9107
#define GL_SAMPLER_2D_MULTISAMPLE	0x9108
#define GL_INT_SAMPLER_2D_MULTISAMPLE	0x9109
#define GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE	0x910A
#define GL_SAMPLER_2D_MULTISAMPLE_ARRAY	0x910B
#define GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY	0x910C
#define GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY	0x910D
#define GL_MAX_COLOR_TEXTURE_SAMPLES	0x910E
#define GL_MAX_DEPTH_TEXTURE_SAMPLES	0x910F
#define GL_MAX_INTEGER_SAMPLES	0x9110

// GL_VERSION_3_3
#define GL_VERTEX_ATTRIB_ARRAY_DIVISOR	0x88FE

// GL_ARB_blend_func_extended
#define GL_SRC1_COLOR	0x88F9
#define GL_ONE_MINUS_SRC1_COLOR	0x88FA
#define GL_ONE_MINUS_SRC1_ALPHA	0x88FB
#define GL_MAX_DUAL_SOURCE_DRAW_BUFFERS	0x88FC

// GL_ARB_occlusion_query2
#define GL_ANY_SAMPLES_PASSED	0x8C2F

// GL_ARB_sampler_objects
#define GL_SAMPLER_BINDING	0x8919

// GL_ARB_texture_rgb10_a2ui
#define GL_RGB10_A2UI	0x906F

// GL_ARB_texture_swizzle
#define GL_TEXTURE_SWIZZLE_R	0x8E42
#define GL_TEXTURE_SWIZZLE_G	0x8E43
#define GL_TEXTURE_SWIZZLE_B	0x8E44
#define GL_TEXTURE_SWIZZLE_A	0x8E45
#define GL_TEXTURE_SWIZZLE_RGBA	0x8E46

// GL_ARB_timer_query
#define GL_TIME_ELAPSED	0x88BF
#define GL_TIMESTAMP	0x8E28

// GL_ARB_vertex_type_2_10_10_10_rev
#define GL_INT_2_10_10_10_REV	0x8D9F

// GL_VERSION_1_0
typedef void (APIENTRY* PFNGLCULLFACEPROC)(GLenum mode);
typedef void (APIENTRY* PFNGLFRONTFACEPROC)(GLenum mode);
typedef void (APIENTRY* PFNGLHINTPROC)(GLenum target, GLenum mode);
typedef void (APIENTRY* PFNGLLINEWIDTHPROC)(GLfloat width);
typedef void (APIENTRY* PFNGLPOINTSIZEPROC)(GLfloat size);
typedef void (APIENTRY* PFNGLPOLYGONMODEPROC)(GLenum face, GLenum mode);
typedef void (APIENTRY* PFNGLSCISSORPROC)(GLint x, GLint y, GLsizei width, GLsizei height);
typedef void (APIENTRY* PFNGLTEXPARAMETERFPROC)(GLenum target, GLenum pname, GLfloat param);
typedef void (APIENTRY* PFNGLTEXPARAMETERFVPROC)(GLenum target, GLenum pname, const GLfloat *params);
typedef void (APIENTRY* PFNGLTEXPARAMETERIPROC)(GLenum target, GLenum pname, GLint param);
typedef void (APIENTRY* PFNGLTEXPARAMETERIVPROC)(GLenum target, GLenum pname, const GLint *params);
typedef void (APIENTRY* PFNGLTEXIMAGE1DPROC)(GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const GLvoid *pixels);
typedef void (APIENTRY* PFNGLTEXIMAGE2DPROC)(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const GLvoid *pixels);
typedef void (APIENTRY* PFNGLDRAWBUFFERPROC)(GLenum mode);
typedef void (APIENTRY* PFNGLCLEARPROC)(GLbitfield mask);
typedef void (APIENTRY* PFNGLCLEARCOLORPROC)(GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha);
typedef void (APIENTRY* PFNGLCLEARSTENCILPROC)(GLint s);
typedef void (APIENTRY* PFNGLCLEARDEPTHPROC)(GLclampd depth);
typedef void (APIENTRY* PFNGLSTENCILMASKPROC)(GLuint mask);
typedef void (APIENTRY* PFNGLCOLORMASKPROC)(GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha);
typedef void (APIENTRY* PFNGLDEPTHMASKPROC)(GLboolean flag);
typedef void (APIENTRY* PFNGLDISABLEPROC)(GLenum cap);
typedef void (APIENTRY* PFNGLENABLEPROC)(GLenum cap);
typedef void (APIENTRY* PFNGLFINISHPROC)(void);
typedef void (APIENTRY* PFNGLFLUSHPROC)(void);
typedef void (APIENTRY* PFNGLBLENDFUNCPROC)(GLenum sfactor, GLenum dfactor);
typedef void (APIENTRY* PFNGLLOGICOPPROC)(GLenum opcode);
typedef void (APIENTRY* PFNGLSTENCILFUNCPROC)(GLenum func, GLint ref, GLuint mask);
typedef void (APIENTRY* PFNGLSTENCILOPPROC)(GLenum fail, GLenum zfail, GLenum zpass);
typedef void (APIENTRY* PFNGLDEPTHFUNCPROC)(GLenum func);
typedef void (APIENTRY* PFNGLPIXELSTOREFPROC)(GLenum pname, GLfloat param);
typedef void (APIENTRY* PFNGLPIXELSTOREIPROC)(GLenum pname, GLint param);
typedef void (APIENTRY* PFNGLREADBUFFERPROC)(GLenum mode);
typedef void (APIENTRY* PFNGLREADPIXELSPROC)(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLvoid *pixels);
typedef void (APIENTRY* PFNGLGETBOOLEANVPROC)(GLenum pname, GLboolean *params);
typedef void (APIENTRY* PFNGLGETDOUBLEVPROC)(GLenum pname, GLdouble *params);
typedef GLenum (APIENTRY* PFNGLGETERRORPROC)(void);
typedef void (APIENTRY* PFNGLGETFLOATVPROC)(GLenum pname, GLfloat *params);
typedef void (APIENTRY* PFNGLGETINTEGERVPROC)(GLenum pname, GLint *params);
typedef const GLubyte * (APIENTRY* PFNGLGETSTRINGPROC)(GLenum name);
typedef void (APIENTRY* PFNGLGETTEXIMAGEPROC)(GLenum target, GLint level, GLenum format, GLenum type, GLvoid *pixels);
typedef void (APIENTRY* PFNGLGETTEXPARAMETERFVPROC)(GLenum target, GLenum pname, GLfloat *params);
typedef void (APIENTRY* PFNGLGETTEXPARAMETERIVPROC)(GLenum target, GLenum pname, GLint *params);
typedef void (APIENTRY* PFNGLGETTEXLEVELPARAMETERFVPROC)(GLenum target, GLint level, GLenum pname, GLfloat *params);
typedef void (APIENTRY* PFNGLGETTEXLEVELPARAMETERIVPROC)(GLenum target, GLint level, GLenum pname, GLint *params);
typedef GLboolean (APIENTRY* PFNGLISENABLEDPROC)(GLenum cap);
typedef void (APIENTRY* PFNGLDEPTHRANGEPROC)(GLclampd near, GLclampd far);
typedef void (APIENTRY* PFNGLVIEWPORTPROC)(GLint x, GLint y, GLsizei width, GLsizei height);

// GL_VERSION_1_1
typedef void (APIENTRY* PFNGLDRAWARRAYSPROC)(GLenum mode, GLint first, GLsizei count);
typedef void (APIENTRY* PFNGLDRAWELEMENTSPROC)(GLenum mode, GLsizei count, GLenum type, const GLvoid *indices);
typedef void (APIENTRY* PFNGLGETPOINTERVPROC)(GLenum pname, GLvoid* *params);
typedef void (APIENTRY* PFNGLPOLYGONOFFSETPROC)(GLfloat factor, GLfloat units);
typedef void (APIENTRY* PFNGLCOPYTEXIMAGE1DPROC)(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);
typedef void (APIENTRY* PFNGLCOPYTEXIMAGE2DPROC)(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
typedef void (APIENTRY* PFNGLCOPYTEXSUBIMAGE1DPROC)(GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
typedef void (APIENTRY* PFNGLCOPYTEXSUBIMAGE2DPROC)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
typedef void (APIENTRY* PFNGLTEXSUBIMAGE1DPROC)(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const GLvoid *pixels);
typedef void (APIENTRY* PFNGLTEXSUBIMAGE2DPROC)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *pixels);
typedef void (APIENTRY* PFNGLBINDTEXTUREPROC)(GLenum target, GLuint texture);
typedef void (APIENTRY* PFNGLDELETETEXTURESPROC)(GLsizei n, const GLuint *textures);
typedef void (APIENTRY* PFNGLGENTEXTURESPROC)(GLsizei n, GLuint *textures);
typedef GLboolean (APIENTRY* PFNGLISTEXTUREPROC)(GLuint texture);

// GL_VERSION_1_2
typedef void (APIENTRY* PFNGLBLENDCOLORPROC)(GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha);
typedef void (APIENTRY* PFNGLBLENDEQUATIONPROC)(GLenum mode);
typedef void (APIENTRY* PFNGLDRAWRANGEELEMENTSPROC)(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const GLvoid *indices);
typedef void (APIENTRY* PFNGLTEXIMAGE3DPROC)(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const GLvoid *pixels);
typedef void (APIENTRY* PFNGLTEXSUBIMAGE3DPROC)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const GLvoid *pixels);
typedef void (APIENTRY* PFNGLCOPYTEXSUBIMAGE3DPROC)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);

// GL_VERSION_1_3
typedef void (APIENTRY* PFNGLACTIVETEXTUREPROC)(GLenum texture);
typedef void (APIENTRY* PFNGLSAMPLECOVERAGEPROC)(GLclampf value, GLboolean invert);
typedef void (APIENTRY* PFNGLCOMPRESSEDTEXIMAGE3DPROC)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const GLvoid *data);
typedef void (APIENTRY* PFNGLCOMPRESSEDTEXIMAGE2DPROC)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const GLvoid *data);
typedef void (APIENTRY* PFNGLCOMPRESSEDTEXIMAGE1DPROC)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const GLvoid *data);
typedef void (APIENTRY* PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const GLvoid *data);
typedef void (APIENTRY* PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const GLvoid *data);
typedef void (APIENTRY* PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC)(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const GLvoid *data);
typedef void (APIENTRY* PFNGLGETCOMPRESSEDTEXIMAGEPROC)(GLenum target, GLint level, GLvoid *img);

// GL_VERSION_1_4
typedef void (APIENTRY* PFNGLBLENDFUNCSEPARATEPROC)(GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);
typedef void (APIENTRY* PFNGLMULTIDRAWARRAYSPROC)(GLenum mode, const GLint *first, const GLsizei *count, GLsizei primcount);
typedef void (APIENTRY* PFNGLMULTIDRAWELEMENTSPROC)(GLenum mode, const GLsizei *count, GLenum type, const GLvoid* *indices, GLsizei primcount);
typedef void (APIENTRY* PFNGLPOINTPARAMETERFPROC)(GLenum pname, GLfloat param);
typedef void (APIENTRY* PFNGLPOINTPARAMETERFVPROC)(GLenum pname, const GLfloat *params);
typedef void (APIENTRY* PFNGLPOINTPARAMETERIPROC)(GLenum pname, GLint param);
typedef void (APIENTRY* PFNGLPOINTPARAMETERIVPROC)(GLenum pname, const GLint *params);

// GL_VERSION_1_5
typedef void (APIENTRY* PFNGLGENQUERIESPROC)(GLsizei n, GLuint *ids);
typedef void (APIENTRY* PFNGLDELETEQUERIESPROC)(GLsizei n, const GLuint *ids);
typedef GLboolean (APIENTRY* PFNGLISQUERYPROC)(GLuint id);
typedef void (APIENTRY* PFNGLBEGINQUERYPROC)(GLenum target, GLuint id);
typedef void (APIENTRY* PFNGLENDQUERYPROC)(GLenum target);
typedef void (APIENTRY* PFNGLGETQUERYIVPROC)(GLenum target, GLenum pname, GLint *params);
typedef void (APIENTRY* PFNGLGETQUERYOBJECTIVPROC)(GLuint id, GLenum pname, GLint *params);
typedef void (APIENTRY* PFNGLGETQUERYOBJECTUIVPROC)(GLuint id, GLenum pname, GLuint *params);
typedef void (APIENTRY* PFNGLBINDBUFFERPROC)(GLenum target, GLuint buffer);
typedef void (APIENTRY* PFNGLDELETEBUFFERSPROC)(GLsizei n, const GLuint *buffers);
typedef void (APIENTRY* PFNGLGENBUFFERSPROC)(GLsizei n, GLuint *buffers);
typedef GLboolean (APIENTRY* PFNGLISBUFFERPROC)(GLuint buffer);
typedef void (APIENTRY* PFNGLBUFFERDATAPROC)(GLenum target, GLsizeiptr size, const GLvoid *data, GLenum usage);
typedef void (APIENTRY* PFNGLBUFFERSUBDATAPROC)(GLenum target, GLintptr offset, GLsizeiptr size, const GLvoid *data);
typedef void (APIENTRY* PFNGLGETBUFFERSUBDATAPROC)(GLenum target, GLintptr offset, GLsizeiptr size, GLvoid *data);
typedef GLvoid* (APIENTRY* PFNGLMAPBUFFERPROC)(GLenum target, GLenum access);
typedef GLboolean (APIENTRY* PFNGLUNMAPBUFFERPROC)(GLenum target);
typedef void (APIENTRY* PFNGLGETBUFFERPARAMETERIVPROC)(GLenum target, GLenum pname, GLint *params);
typedef void (APIENTRY* PFNGLGETBUFFERPOINTERVPROC)(GLenum target, GLenum pname, GLvoid* *params);

// GL_VERSION_2_0
typedef void (APIENTRY* PFNGLBLENDEQUATIONSEPARATEPROC)(GLenum modeRGB, GLenum modeAlpha);
typedef void (APIENTRY* PFNGLDRAWBUFFERSPROC)(GLsizei n, const GLenum *bufs);
typedef void (APIENTRY* PFNGLSTENCILOPSEPARATEPROC)(GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass);
typedef void (APIENTRY* PFNGLSTENCILFUNCSEPARATEPROC)(GLenum face, GLenum func, GLint ref, GLuint mask);
typedef void (APIENTRY* PFNGLSTENCILMASKSEPARATEPROC)(GLenum face, GLuint mask);
typedef void (APIENTRY* PFNGLATTACHSHADERPROC)(GLuint program, GLuint shader);
typedef void (APIENTRY* PFNGLBINDATTRIBLOCATIONPROC)(GLuint program, GLuint index, const GLchar *name);
typedef void (APIENTRY* PFNGLCOMPILESHADERPROC)(GLuint shader);
typedef GLuint (APIENTRY* PFNGLCREATEPROGRAMPROC)(void);
typedef GLuint (APIENTRY* PFNGLCREATESHADERPROC)(GLenum type);
typedef void (APIENTRY* PFNGLDELETEPROGRAMPROC)(GLuint program);
typedef void (APIENTRY* PFNGLDELETESHADERPROC)(GLuint shader);
typedef void (APIENTRY* PFNGLDETACHSHADERPROC)(GLuint program, GLuint shader);
typedef void (APIENTRY* PFNGLDISABLEVERTEXATTRIBARRAYPROC)(GLuint index);
typedef void (APIENTRY* PFNGLENABLEVERTEXATTRIBARRAYPROC)(GLuint index);
typedef void (APIENTRY* PFNGLGETACTIVEATTRIBPROC)(GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name);
typedef void (APIENTRY* PFNGLGETACTIVEUNIFORMPROC)(GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name);
typedef void (APIENTRY* PFNGLGETATTACHEDSHADERSPROC)(GLuint program, GLsizei maxCount, GLsizei *count, GLuint *obj);
typedef GLint (APIENTRY* PFNGLGETATTRIBLOCATIONPROC)(GLuint program, const GLchar *name);
typedef void (APIENTRY* PFNGLGETPROGRAMIVPROC)(GLuint program, GLenum pname, GLint *params);
typedef void (APIENTRY* PFNGLGETPROGRAMINFOLOGPROC)(GLuint program, GLsizei bufSize, GLsizei *length, GLchar *infoLog);
typedef void (APIENTRY* PFNGLGETSHADERIVPROC)(GLuint shader, GLenum pname, GLint *params);
typedef void (APIENTRY* PFNGLGETSHADERINFOLOGPROC)(GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *infoLog);
typedef void (APIENTRY* PFNGLGETSHADERSOURCEPROC)(GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *source);
typedef GLint (APIENTRY* PFNGLGETUNIFORMLOCATIONPROC)(GLuint program, const GLchar *name);
typedef void (APIENTRY* PFNGLGETUNIFORMFVPROC)(GLuint program, GLint location, GLfloat *params);
typedef void (APIENTRY* PFNGLGETUNIFORMIVPROC)(GLuint program, GLint location, GLint *params);
typedef void (APIENTRY* PFNGLGETVERTEXATTRIBDVPROC)(GLuint index, GLenum pname, GLdouble *params);
typedef void (APIENTRY* PFNGLGETVERTEXATTRIBFVPROC)(GLuint index, GLenum pname, GLfloat *params);
typedef void (APIENTRY* PFNGLGETVERTEXATTRIBIVPROC)(GLuint index, GLenum pname, GLint *params);
typedef void (APIENTRY* PFNGLGETVERTEXATTRIBPOINTERVPROC)(GLuint index, GLenum pname, GLvoid* *pointer);
typedef GLboolean (APIENTRY* PFNGLISPROGRAMPROC)(GLuint program);
typedef GLboolean (APIENTRY* PFNGLISSHADERPROC)(GLuint shader);
typedef void (APIENTRY* PFNGLLINKPROGRAMPROC)(GLuint program);
typedef void (APIENTRY* PFNGLSHADERSOURCEPROC)(GLuint shader, GLsizei count, const GLchar* *string, const GLint *length);
typedef void (APIENTRY* PFNGLUSEPROGRAMPROC)(GLuint program);
typedef void (APIENTRY* PFNGLUNIFORM1FPROC)(GLint location, GLfloat v0);
typedef void (APIENTRY* PFNGLUNIFORM2FPROC)(GLint location, GLfloat v0, GLfloat v1);
typedef void (APIENTRY* PFNGLUNIFORM3FPROC)(GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
typedef void (APIENTRY* PFNGLUNIFORM4FPROC)(GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
typedef void (APIENTRY* PFNGLUNIFORM1IPROC)(GLint location, GLint v0);
typedef void (APIENTRY* PFNGLUNIFORM2IPROC)(GLint location, GLint v0, GLint v1);
typedef void (APIENTRY* PFNGLUNIFORM3IPROC)(GLint location, GLint v0, GLint v1, GLint v2);
typedef void (APIENTRY* PFNGLUNIFORM4IPROC)(GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
typedef void (APIENTRY* PFNGLUNIFORM1FVPROC)(GLint location, GLsizei count, const GLfloat *value);
typedef void (APIENTRY* PFNGLUNIFORM2FVPROC)(GLint location, GLsizei count, const GLfloat *value);
typedef void (APIENTRY* PFNGLUNIFORM3FVPROC)(GLint location, GLsizei count, const GLfloat *value);
typedef void (APIENTRY* PFNGLUNIFORM4FVPROC)(GLint location, GLsizei count, const GLfloat *value);
typedef void (APIENTRY* PFNGLUNIFORM1IVPROC)(GLint location, GLsizei count, const GLint *value);
typedef void (APIENTRY* PFNGLUNIFORM2IVPROC)(GLint location, GLsizei count, const GLint *value);
typedef void (APIENTRY* PFNGLUNIFORM3IVPROC)(GLint location, GLsizei count, const GLint *value);
typedef void (APIENTRY* PFNGLUNIFORM4IVPROC)(GLint location, GLsizei count, const GLint *value);
typedef void (APIENTRY* PFNGLUNIFORMMATRIX2FVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
typedef void (APIENTRY* PFNGLUNIFORMMATRIX3FVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
typedef void (APIENTRY* PFNGLUNIFORMMATRIX4FVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
typedef void (APIENTRY* PFNGLVALIDATEPROGRAMPROC)(GLuint program);
typedef void (APIENTRY* PFNGLVERTEXATTRIB1DPROC)(GLuint index, GLdouble x);
typedef void (APIENTRY* PFNGLVERTEXATTRIB1DVPROC)(GLuint index, const GLdouble *v);
typedef void (APIENTRY* PFNGLVERTEXATTRIB1FPROC)(GLuint index, GLfloat x);
typedef void (APIENTRY* PFNGLVERTEXATTRIB1FVPROC)(GLuint index, const GLfloat *v);
typedef void (APIENTRY* PFNGLVERTEXATTRIB1SPROC)(GLuint index, GLshort x);
typedef void (APIENTRY* PFNGLVERTEXATTRIB1SVPROC)(GLuint index, const GLshort *v);
typedef void (APIENTRY* PFNGLVERTEXATTRIB2DPROC)(GLuint index, GLdouble x, GLdouble y);
typedef void (APIENTRY* PFNGLVERTEXATTRIB2DVPROC)(GLuint index, const GLdouble *v);
typedef void (APIENTRY* PFNGLVERTEXATTRIB2FPROC)(GLuint index, GLfloat x, GLfloat y);
typedef void (APIENTRY* PFNGLVERTEXATTRIB2FVPROC)(GLuint index, const GLfloat *v);
typedef void (APIENTRY* PFNGLVERTEXATTRIB2SPROC)(GLuint index, GLshort x, GLshort y);
typedef void (APIENTRY* PFNGLVERTEXATTRIB2SVPROC)(GLuint index, const GLshort *v);
typedef void (APIENTRY* PFNGLVERTEXATTRIB3DPROC)(GLuint index, GLdouble x, GLdouble y, GLdouble z);
typedef void (APIENTRY* PFNGLVERTEXATTRIB3DVPROC)(GLuint index, const GLdouble *v);
typedef void (APIENTRY* PFNGLVERTEXATTRIB3FPROC)(GLuint index, GLfloat x, GLfloat y, GLfloat z);
typedef void (APIENTRY* PFNGLVERTEXATTRIB3FVPROC)(GLuint index, const GLfloat *v);
typedef void (APIENTRY* PFNGLVERTEXATTRIB3SPROC)(GLuint index, GLshort x, GLshort y, GLshort z);
typedef void (APIENTRY* PFNGLVERTEXATTRIB3SVPROC)(GLuint index, const GLshort *v);
typedef void (APIENTRY* PFNGLVERTEXATTRIB4NBVPROC)(GLuint index, const GLbyte *v);
typedef void (APIENTRY* PFNGLVERTEXATTRIB4NIVPROC)(GLuint index, const GLint *v);
typedef void (APIENTRY* PFNGLVERTEXATTRIB4NSVPROC)(GLuint index, const GLshort *v);
typedef void (APIENTRY* PFNGLVERTEXATTRIB4NUBPROC)(GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);
typedef void (APIENTRY* PFNGLVERTEXATTRIB4NUBVPROC)(GLuint index, const GLubyte *v);
typedef void (APIENTRY* PFNGLVERTEXATTRIB4NUIVPROC)(GLuint index, const GLuint *v);
typedef void (APIENTRY* PFNGLVERTEXATTRIB4NUSVPROC)(GLuint index, const GLushort *v);
typedef void (APIENTRY* PFNGLVERTEXATTRIB4BVPROC)(GLuint index, const GLbyte *v);
typedef void (APIENTRY* PFNGLVERTEXATTRIB4DPROC)(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
typedef void (APIENTRY* PFNGLVERTEXATTRIB4DVPROC)(GLuint index, const GLdouble *v);
typedef void (APIENTRY* PFNGLVERTEXATTRIB4FPROC)(GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
typedef void (APIENTRY* PFNGLVERTEXATTRIB4FVPROC)(GLuint index, const GLfloat *v);
typedef void (APIENTRY* PFNGLVERTEXATTRIB4IVPROC)(GLuint index, const GLint *v);
typedef void (APIENTRY* PFNGLVERTEXATTRIB4SPROC)(GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);
typedef void (APIENTRY* PFNGLVERTEXATTRIB4SVPROC)(GLuint index, const GLshort *v);
typedef void (APIENTRY* PFNGLVERTEXATTRIB4UBVPROC)(GLuint index, const GLubyte *v);
typedef void (APIENTRY* PFNGLVERTEXATTRIB4UIVPROC)(GLuint index, const GLuint *v);
typedef void (APIENTRY* PFNGLVERTEXATTRIB4USVPROC)(GLuint index, const GLushort *v);
typedef void (APIENTRY* PFNGLVERTEXATTRIBPOINTERPROC)(GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const GLvoid *pointer);

// GL_VERSION_2_1
typedef void (APIENTRY* PFNGLUNIFORMMATRIX2X3FVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
typedef void (APIENTRY* PFNGLUNIFORMMATRIX3X2FVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
typedef void (APIENTRY* PFNGLUNIFORMMATRIX2X4FVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
typedef void (APIENTRY* PFNGLUNIFORMMATRIX4X2FVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
typedef void (APIENTRY* PFNGLUNIFORMMATRIX3X4FVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
typedef void (APIENTRY* PFNGLUNIFORMMATRIX4X3FVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);

// GL_VERSION_3_0
typedef void (APIENTRY* PFNGLCOLORMASKIPROC)(GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a);
typedef void (APIENTRY* PFNGLGETBOOLEANI_VPROC)(GLenum target, GLuint index, GLboolean *data);
typedef void (APIENTRY* PFNGLGETINTEGERI_VPROC)(GLenum target, GLuint index, GLint *data);
typedef void (APIENTRY* PFNGLENABLEIPROC)(GLenum target, GLuint index);
typedef void (APIENTRY* PFNGLDISABLEIPROC)(GLenum target, GLuint index);
typedef GLboolean (APIENTRY* PFNGLISENABLEDIPROC)(GLenum target, GLuint index);
typedef void (APIENTRY* PFNGLBEGINTRANSFORMFEEDBACKPROC)(GLenum primitiveMode);
typedef void (APIENTRY* PFNGLENDTRANSFORMFEEDBACKPROC)(void);
typedef void (APIENTRY* PFNGLBINDBUFFERRANGEPROC)(GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
typedef void (APIENTRY* PFNGLBINDBUFFERBASEPROC)(GLenum target, GLuint index, GLuint buffer);
typedef void (APIENTRY* PFNGLTRANSFORMFEEDBACKVARYINGSPROC)(GLuint program, GLsizei count, const GLchar* *varyings, GLenum bufferMode);
typedef void (APIENTRY* PFNGLGETTRANSFORMFEEDBACKVARYINGPROC)(GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name);
typedef void (APIENTRY* PFNGLCLAMPCOLORPROC)(GLenum target, GLenum clamp);
typedef void (APIENTRY* PFNGLBEGINCONDITIONALRENDERPROC)(GLuint id, GLenum mode);
typedef void (APIENTRY* PFNGLENDCONDITIONALRENDERPROC)(void);
typedef void (APIENTRY* PFNGLVERTEXATTRIBIPOINTERPROC)(GLuint index, GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);
typedef void (APIENTRY* PFNGLGETVERTEXATTRIBIIVPROC)(GLuint index, GLenum pname, GLint *params);
typedef void (APIENTRY* PFNGLGETVERTEXATTRIBIUIVPROC)(GLuint index, GLenum pname, GLuint *params);
typedef void (APIENTRY* PFNGLVERTEXATTRIBI1IPROC)(GLuint index, GLint x);
typedef void (APIENTRY* PFNGLVERTEXATTRIBI2IPROC)(GLuint index, GLint x, GLint y);
typedef void (APIENTRY* PFNGLVERTEXATTRIBI3IPROC)(GLuint index, GLint x, GLint y, GLint z);
typedef void (APIENTRY* PFNGLVERTEXATTRIBI4IPROC)(GLuint index, GLint x, GLint y, GLint z, GLint w);
typedef void (APIENTRY* PFNGLVERTEXATTRIBI1UIPROC)(GLuint index, GLuint x);
typedef void (APIENTRY* PFNGLVERTEXATTRIBI2UIPROC)(GLuint index, GLuint x, GLuint y);
typedef void (APIENTRY* PFNGLVERTEXATTRIBI3UIPROC)(GLuint index, GLuint x, GLuint y, GLuint z);
typedef void (APIENTRY* PFNGLVERTEXATTRIBI4UIPROC)(GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
typedef void (APIENTRY* PFNGLVERTEXATTRIBI1IVPROC)(GLuint index, const GLint *v);
typedef void (APIENTRY* PFNGLVERTEXATTRIBI2IVPROC)(GLuint index, const GLint *v);
typedef void (APIENTRY* PFNGLVERTEXATTRIBI3IVPROC)(GLuint index, const GLint *v);
typedef void (APIENTRY* PFNGLVERTEXATTRIBI4IVPROC)(GLuint index, const GLint *v);
typedef void (APIENTRY* PFNGLVERTEXATTRIBI1UIVPROC)(GLuint index, const GLuint *v);
typedef void (APIENTRY* PFNGLVERTEXATTRIBI2UIVPROC)(GLuint index, const GLuint *v);
typedef void (APIENTRY* PFNGLVERTEXATTRIBI3UIVPROC)(GLuint index, const GLuint *v);
typedef void (APIENTRY* PFNGLVERTEXATTRIBI4UIVPROC)(GLuint index, const GLuint *v);
typedef void (APIENTRY* PFNGLVERTEXATTRIBI4BVPROC)(GLuint index, const GLbyte *v);
typedef void (APIENTRY* PFNGLVERTEXATTRIBI4SVPROC)(GLuint index, const GLshort *v);
typedef void (APIENTRY* PFNGLVERTEXATTRIBI4UBVPROC)(GLuint index, const GLubyte *v);
typedef void (APIENTRY* PFNGLVERTEXATTRIBI4USVPROC)(GLuint index, const GLushort *v);
typedef void (APIENTRY* PFNGLGETUNIFORMUIVPROC)(GLuint program, GLint location, GLuint *params);
typedef void (APIENTRY* PFNGLBINDFRAGDATALOCATIONPROC)(GLuint program, GLuint color, const GLchar *name);
typedef GLint (APIENTRY* PFNGLGETFRAGDATALOCATIONPROC)(GLuint program, const GLchar *name);
typedef void (APIENTRY* PFNGLUNIFORM1UIPROC)(GLint location, GLuint v0);
typedef void (APIENTRY* PFNGLUNIFORM2UIPROC)(GLint location, GLuint v0, GLuint v1);
typedef void (APIENTRY* PFNGLUNIFORM3UIPROC)(GLint location, GLuint v0, GLuint v1, GLuint v2);
typedef void (APIENTRY* PFNGLUNIFORM4UIPROC)(GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
typedef void (APIENTRY* PFNGLUNIFORM1UIVPROC)(GLint location, GLsizei count, const GLuint *value);
typedef void (APIENTRY* PFNGLUNIFORM2UIVPROC)(GLint location, GLsizei count, const GLuint *value);
typedef void (APIENTRY* PFNGLUNIFORM3UIVPROC)(GLint location, GLsizei count, const GLuint *value);
typedef void (APIENTRY* PFNGLUNIFORM4UIVPROC)(GLint location, GLsizei count, const GLuint *value);
typedef void (APIENTRY* PFNGLTEXPARAMETERIIVPROC)(GLenum target, GLenum pname, const GLint *params);
typedef void (APIENTRY* PFNGLTEXPARAMETERIUIVPROC)(GLenum target, GLenum pname, const GLuint *params);
typedef void (APIENTRY* PFNGLGETTEXPARAMETERIIVPROC)(GLenum target, GLenum pname, GLint *params);
typedef void (APIENTRY* PFNGLGETTEXPARAMETERIUIVPROC)(GLenum target, GLenum pname, GLuint *params);
typedef void (APIENTRY* PFNGLCLEARBUFFERIVPROC)(GLenum buffer, GLint drawbuffer, const GLint *value);
typedef void (APIENTRY* PFNGLCLEARBUFFERUIVPROC)(GLenum buffer, GLint drawbuffer, const GLuint *value);
typedef void (APIENTRY* PFNGLCLEARBUFFERFVPROC)(GLenum buffer, GLint drawbuffer, const GLfloat *value);
typedef void (APIENTRY* PFNGLCLEARBUFFERFIPROC)(GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil);
typedef const GLubyte * (APIENTRY* PFNGLGETSTRINGIPROC)(GLenum name, GLuint index);

//GL_ARB_framebuffer_object
typedef GLboolean (APIENTRY* PFNGLISRENDERBUFFERPROC)(GLuint renderbuffer);
typedef void (APIENTRY* PFNGLBINDRENDERBUFFERPROC)(GLenum target, GLuint renderbuffer);
typedef void (APIENTRY* PFNGLDELETERENDERBUFFERSPROC)(GLsizei n, const GLuint *renderbuffers);
typedef void (APIENTRY* PFNGLGENRENDERBUFFERSPROC)(GLsizei n, GLuint *renderbuffers);
typedef void (APIENTRY* PFNGLRENDERBUFFERSTORAGEPROC)(GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
typedef void (APIENTRY* PFNGLGETRENDERBUFFERPARAMETERIVPROC)(GLenum target, GLenum pname, GLint *params);
typedef GLboolean (APIENTRY* PFNGLISFRAMEBUFFERPROC)(GLuint framebuffer);
typedef void (APIENTRY* PFNGLBINDFRAMEBUFFERPROC)(GLenum target, GLuint framebuffer);
typedef void (APIENTRY* PFNGLDELETEFRAMEBUFFERSPROC)(GLsizei n, const GLuint *framebuffers);
typedef void (APIENTRY* PFNGLGENFRAMEBUFFERSPROC)(GLsizei n, GLuint *framebuffers);
typedef GLenum (APIENTRY* PFNGLCHECKFRAMEBUFFERSTATUSPROC)(GLenum target);
typedef void (APIENTRY* PFNGLFRAMEBUFFERTEXTURE1DPROC)(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
typedef void (APIENTRY* PFNGLFRAMEBUFFERTEXTURE2DPROC)(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
typedef void (APIENTRY* PFNGLFRAMEBUFFERTEXTURE3DPROC)(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
typedef void (APIENTRY* PFNGLFRAMEBUFFERRENDERBUFFERPROC)(GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
typedef void (APIENTRY* PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC)(GLenum target, GLenum attachment, GLenum pname, GLint *params);
typedef void (APIENTRY* PFNGLGENERATEMIPMAPPROC)(GLenum target);
typedef void (APIENTRY* PFNGLBLITFRAMEBUFFERPROC)(GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
typedef void (APIENTRY* PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
typedef void (APIENTRY* PFNGLFRAMEBUFFERTEXTURELAYERPROC)(GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);

//GL_ARB_map_buffer_range
typedef GLvoid* (APIENTRY* PFNGLMAPBUFFERRANGEPROC)(GLenum target, GLintptr offset, GLsizeiptr length, GLbitfield access);
typedef void (APIENTRY* PFNGLFLUSHMAPPEDBUFFERRANGEPROC)(GLenum target, GLintptr offset, GLsizeiptr length);

//GL_ARB_vertex_array_object
typedef void (APIENTRY* PFNGLBINDVERTEXARRAYPROC)(GLuint array);
typedef void (APIENTRY* PFNGLDELETEVERTEXARRAYSPROC)(GLsizei n, const GLuint *arrays);
typedef void (APIENTRY* PFNGLGENVERTEXARRAYSPROC)(GLsizei n, GLuint *arrays);
typedef GLboolean (APIENTRY* PFNGLISVERTEXARRAYPROC)(GLuint array);

// GL_VERSION_3_1
typedef void (APIENTRY* PFNGLDRAWARRAYSINSTANCEDPROC)(GLenum mode, GLint first, GLsizei count, GLsizei primcount);
typedef void (APIENTRY* PFNGLDRAWELEMENTSINSTANCEDPROC)(GLenum mode, GLsizei count, GLenum type, const GLvoid *indices, GLsizei primcount);
typedef void (APIENTRY* PFNGLTEXBUFFERPROC)(GLenum target, GLenum internalformat, GLuint buffer);
typedef void (APIENTRY* PFNGLPRIMITIVERESTARTINDEXPROC)(GLuint index);

//GL_ARB_copy_buffer
typedef void (APIENTRY* PFNGLCOPYBUFFERSUBDATAPROC)(GLenum readTarget, GLenum writeTarget, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);

//GL_ARB_uniform_buffer_object
typedef void (APIENTRY* PFNGLGETUNIFORMINDICESPROC)(GLuint program, GLsizei uniformCount, const GLchar* *uniformNames, GLuint *uniformIndices);
typedef void (APIENTRY* PFNGLGETACTIVEUNIFORMSIVPROC)(GLuint program, GLsizei uniformCount, const GLuint *uniformIndices, GLenum pname, GLint *params);
typedef void (APIENTRY* PFNGLGETACTIVEUNIFORMNAMEPROC)(GLuint program, GLuint uniformIndex, GLsizei bufSize, GLsizei *length, GLchar *uniformName);
typedef GLuint (APIENTRY* PFNGLGETUNIFORMBLOCKINDEXPROC)(GLuint program, const GLchar *uniformBlockName);
typedef void (APIENTRY* PFNGLGETACTIVEUNIFORMBLOCKIVPROC)(GLuint program, GLuint uniformBlockIndex, GLenum pname, GLint *params);
typedef void (APIENTRY* PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC)(GLuint program, GLuint uniformBlockIndex, GLsizei bufSize, GLsizei *length, GLchar *uniformBlockName);
typedef void (APIENTRY* PFNGLUNIFORMBLOCKBINDINGPROC)(GLuint program, GLuint uniformBlockIndex, GLuint uniformBlockBinding);

// GL_VERSION_3_2
typedef void (APIENTRY* PFNGLGETINTEGER64I_VPROC)(GLenum target, GLuint index, GLint64 *data);
typedef void (APIENTRY* PFNGLGETBUFFERPARAMETERI64VPROC)(GLenum target, GLenum pname, GLint64 *params);
typedef void (APIENTRY* PFNGLFRAMEBUFFERTEXTUREPROC)(GLenum target, GLenum attachment, GLuint texture, GLint level);

//GL_ARB_draw_elements_base_vertex
typedef void (APIENTRY* PFNGLDRAWELEMENTSBASEVERTEXPROC)(GLenum mode, GLsizei count, GLenum type, const GLvoid *indices, GLint basevertex);
typedef void (APIENTRY* PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC)(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const GLvoid *indices, GLint basevertex);
typedef void (APIENTRY* PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC)(GLenum mode, GLsizei count, GLenum type, const GLvoid *indices, GLsizei primcount, GLint basevertex);
typedef void (APIENTRY* PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC)(GLenum mode, const GLsizei *count, GLenum type, const GLvoid* *indices, GLsizei primcount, const GLint *basevertex);

//GL_ARB_provoking_vertex
typedef void (APIENTRY* PFNGLPROVOKINGVERTEXPROC)(GLenum mode);

//GL_ARB_sync
typedef GLsync (APIENTRY* PFNGLFENCESYNCPROC)(GLenum condition, GLbitfield flags);
typedef GLboolean (APIENTRY* PFNGLISSYNCPROC)(GLsync sync);
typedef void (APIENTRY* PFNGLDELETESYNCPROC)(GLsync sync);
typedef GLenum (APIENTRY* PFNGLCLIENTWAITSYNCPROC)(GLsync sync, GLbitfield flags, GLuint64 timeout);
typedef void (APIENTRY* PFNGLWAITSYNCPROC)(GLsync sync, GLbitfield flags, GLuint64 timeout);
typedef void (APIENTRY* PFNGLGETINTEGER64VPROC)(GLenum pname, GLint64 *params);
typedef void (APIENTRY* PFNGLGETSYNCIVPROC)(GLsync sync, GLenum pname, GLsizei bufSize, GLsizei *length, GLint *values);

//GL_ARB_texture_multisample
typedef void (APIENTRY* PFNGLTEXIMAGE2DMULTISAMPLEPROC)(GLenum target, GLsizei samples, GLint internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
typedef void (APIENTRY* PFNGLTEXIMAGE3DMULTISAMPLEPROC)(GLenum target, GLsizei samples, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
typedef void (APIENTRY* PFNGLGETMULTISAMPLEFVPROC)(GLenum pname, GLuint index, GLfloat *val);
typedef void (APIENTRY* PFNGLSAMPLEMASKIPROC)(GLuint index, GLbitfield mask);

// GL_VERSION_3_3
typedef void (APIENTRY* PFNGLVERTEXATTRIBDIVISORPROC)(GLuint index, GLuint divisor);

//GL_ARB_blend_func_extended
typedef void (APIENTRY* PFNGLBINDFRAGDATALOCATIONINDEXEDPROC)(GLuint program, GLuint colorNumber, GLuint index, const GLchar *name);
typedef GLint (APIENTRY* PFNGLGETFRAGDATAINDEXPROC)(GLuint program, const GLchar *name);

//GL_ARB_sampler_objects
typedef void (APIENTRY* PFNGLGENSAMPLERSPROC)(GLsizei count, GLuint *samplers);
typedef void (APIENTRY* PFNGLDELETESAMPLERSPROC)(GLsizei count, const GLuint *samplers);
typedef GLboolean (APIENTRY* PFNGLISSAMPLERPROC)(GLuint sampler);
typedef void (APIENTRY* PFNGLBINDSAMPLERPROC)(GLuint unit, GLuint sampler);
typedef void (APIENTRY* PFNGLSAMPLERPARAMETERIPROC)(GLuint sampler, GLenum pname, GLint param);
typedef void (APIENTRY* PFNGLSAMPLERPARAMETERIVPROC)(GLuint sampler, GLenum pname, const GLint *param);
typedef void (APIENTRY* PFNGLSAMPLERPARAMETERFPROC)(GLuint sampler, GLenum pname, GLfloat param);
typedef void (APIENTRY* PFNGLSAMPLERPARAMETERFVPROC)(GLuint sampler, GLenum pname, const GLfloat *param);
typedef void (APIENTRY* PFNGLSAMPLERPARAMETERIIVPROC)(GLuint sampler, GLenum pname, const GLint *param);
typedef void (APIENTRY* PFNGLSAMPLERPARAMETERIUIVPROC)(GLuint sampler, GLenum pname, const GLuint *param);
typedef void (APIENTRY* PFNGLGETSAMPLERPARAMETERIVPROC)(GLuint sampler, GLenum pname, GLint *params);
typedef void (APIENTRY* PFNGLGETSAMPLERPARAMETERIIVPROC)(GLuint sampler, GLenum pname, GLint *params);
typedef void (APIENTRY* PFNGLGETSAMPLERPARAMETERFVPROC)(GLuint sampler, GLenum pname, GLfloat *params);
typedef void (APIENTRY* PFNGLGETSAMPLERPARAMETERIUIVPROC)(GLuint sampler, GLenum pname, GLuint *params);

//GL_ARB_timer_query
typedef void (APIENTRY* PFNGLQUERYCOUNTERPROC)(GLuint id, GLenum target);
typedef void (APIENTRY* PFNGLGETQUERYOBJECTI64VPROC)(GLuint id, GLenum pname, GLint64 *params);
typedef void (APIENTRY* PFNGLGETQUERYOBJECTUI64VPROC)(GLuint id, GLenum pname, GLuint64 *params);

//GL_ARB_vertex_type_2_10_10_10_rev
typedef void (APIENTRY* PFNGLVERTEXP2UIPROC)(GLenum type, GLuint value);
typedef void (APIENTRY* PFNGLVERTEXP2UIVPROC)(GLenum type, const GLuint *value);
typedef void (APIENTRY* PFNGLVERTEXP3UIPROC)(GLenum type, GLuint value);
typedef void (APIENTRY* PFNGLVERTEXP3UIVPROC)(GLenum type, const GLuint *value);
typedef void (APIENTRY* PFNGLVERTEXP4UIPROC)(GLenum type, GLuint value);
typedef void (APIENTRY* PFNGLVERTEXP4UIVPROC)(GLenum type, const GLuint *value);
typedef void (APIENTRY* PFNGLTEXCOORDP1UIPROC)(GLenum type, GLuint coords);
typedef void (APIENTRY* PFNGLTEXCOORDP1UIVPROC)(GLenum type, const GLuint *coords);
typedef void (APIENTRY* PFNGLTEXCOORDP2UIPROC)(GLenum type, GLuint coords);
typedef void (APIENTRY* PFNGLTEXCOORDP2UIVPROC)(GLenum type, const GLuint *coords);
typedef void (APIENTRY* PFNGLTEXCOORDP3UIPROC)(GLenum type, GLuint coords);
typedef void (APIENTRY* PFNGLTEXCOORDP3UIVPROC)(GLenum type, const GLuint *coords);
typedef void (APIENTRY* PFNGLTEXCOORDP4UIPROC)(GLenum type, GLuint coords);
typedef void (APIENTRY* PFNGLTEXCOORDP4UIVPROC)(GLenum type, const GLuint *coords);
typedef void (APIENTRY* PFNGLMULTITEXCOORDP1UIPROC)(GLenum texture, GLenum type, GLuint coords);
typedef void (APIENTRY* PFNGLMULTITEXCOORDP1UIVPROC)(GLenum texture, GLenum type, const GLuint *coords);
typedef void (APIENTRY* PFNGLMULTITEXCOORDP2UIPROC)(GLenum texture, GLenum type, GLuint coords);
typedef void (APIENTRY* PFNGLMULTITEXCOORDP2UIVPROC)(GLenum texture, GLenum type, const GLuint *coords);
typedef void (APIENTRY* PFNGLMULTITEXCOORDP3UIPROC)(GLenum texture, GLenum type, GLuint coords);
typedef void (APIENTRY* PFNGLMULTITEXCOORDP3UIVPROC)(GLenum texture, GLenum type, const GLuint *coords);
typedef void (APIENTRY* PFNGLMULTITEXCOORDP4UIPROC)(GLenum texture, GLenum type, GLuint coords);
typedef void (APIENTRY* PFNGLMULTITEXCOORDP4UIVPROC)(GLenum texture, GLenum type, const GLuint *coords);
typedef void (APIENTRY* PFNGLNORMALP3UIPROC)(GLenum type, GLuint coords);
typedef void (APIENTRY* PFNGLNORMALP3UIVPROC)(GLenum type, const GLuint *coords);
typedef void (APIENTRY* PFNGLCOLORP3UIPROC)(GLenum type, GLuint color);
typedef void (APIENTRY* PFNGLCOLORP3UIVPROC)(GLenum type, const GLuint *color);
typedef void (APIENTRY* PFNGLCOLORP4UIPROC)(GLenum type, GLuint color);
typedef void (APIENTRY* PFNGLCOLORP4UIVPROC)(GLenum type, const GLuint *color);
typedef void (APIENTRY* PFNGLSECONDARYCOLORP3UIPROC)(GLenum type, GLuint color);
typedef void (APIENTRY* PFNGLSECONDARYCOLORP3UIVPROC)(GLenum type, const GLuint *color);
typedef void (APIENTRY* PFNGLVERTEXATTRIBP1UIPROC)(GLuint index, GLenum type, GLboolean normalized, GLuint value);
typedef void (APIENTRY* PFNGLVERTEXATTRIBP1UIVPROC)(GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
typedef void (APIENTRY* PFNGLVERTEXATTRIBP2UIPROC)(GLuint index, GLenum type, GLboolean normalized, GLuint value);
typedef void (APIENTRY* PFNGLVERTEXATTRIBP2UIVPROC)(GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
typedef void (APIENTRY* PFNGLVERTEXATTRIBP3UIPROC)(GLuint index, GLenum type, GLboolean normalized, GLuint value);
typedef void (APIENTRY* PFNGLVERTEXATTRIBP3UIVPROC)(GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
typedef void (APIENTRY* PFNGLVERTEXATTRIBP4UIPROC)(GLuint index, GLenum type, GLboolean normalized, GLuint value);
typedef void (APIENTRY* PFNGLVERTEXATTRIBP4UIVPROC)(GLuint index, GLenum type, GLboolean normalized, const GLuint *value);


GLAPI PFNGLACTIVETEXTUREPROC glActiveTexture;
GLAPI PFNGLATTACHSHADERPROC glAttachShader;
GLAPI PFNGLBEGINCONDITIONALRENDERPROC glBeginConditionalRender;
GLAPI PFNGLBEGINQUERYPROC glBeginQuery;
GLAPI PFNGLBEGINTRANSFORMFEEDBACKPROC glBeginTransformFeedback;
GLAPI PFNGLBINDATTRIBLOCATIONPROC glBindAttribLocation;
GLAPI PFNGLBINDBUFFERPROC glBindBuffer;
GLAPI PFNGLBINDBUFFERBASEPROC glBindBufferBase;
GLAPI PFNGLBINDBUFFERRANGEPROC glBindBufferRange;
GLAPI PFNGLBINDFRAGDATALOCATIONPROC glBindFragDataLocation;
GLAPI PFNGLBINDFRAGDATALOCATIONINDEXEDPROC glBindFragDataLocationIndexed;
GLAPI PFNGLBINDFRAMEBUFFERPROC glBindFramebuffer;
GLAPI PFNGLBINDRENDERBUFFERPROC glBindRenderbuffer;
GLAPI PFNGLBINDSAMPLERPROC glBindSampler;
GLAPI PFNGLBINDTEXTUREPROC glBindTexture;
GLAPI PFNGLBINDVERTEXARRAYPROC glBindVertexArray;
GLAPI PFNGLBLENDCOLORPROC glBlendColor;
GLAPI PFNGLBLENDEQUATIONPROC glBlendEquation;
GLAPI PFNGLBLENDEQUATIONSEPARATEPROC glBlendEquationSeparate;
GLAPI PFNGLBLENDFUNCPROC glBlendFunc;
GLAPI PFNGLBLENDFUNCSEPARATEPROC glBlendFuncSeparate;
GLAPI PFNGLBLITFRAMEBUFFERPROC glBlitFramebuffer;
GLAPI PFNGLBUFFERDATAPROC glBufferData;
GLAPI PFNGLBUFFERSUBDATAPROC glBufferSubData;
GLAPI PFNGLCHECKFRAMEBUFFERSTATUSPROC glCheckFramebufferStatus;
GLAPI PFNGLCLAMPCOLORPROC glClampColor;
GLAPI PFNGLCLEARPROC glClear;
GLAPI PFNGLCLEARBUFFERFIPROC glClearBufferfi;
GLAPI PFNGLCLEARBUFFERFVPROC glClearBufferfv;
GLAPI PFNGLCLEARBUFFERIVPROC glClearBufferiv;
GLAPI PFNGLCLEARBUFFERUIVPROC glClearBufferuiv;
GLAPI PFNGLCLEARCOLORPROC glClearColor;
GLAPI PFNGLCLEARDEPTHPROC glClearDepth;
GLAPI PFNGLCLEARSTENCILPROC glClearStencil;
GLAPI PFNGLCLIENTWAITSYNCPROC glClientWaitSync;
GLAPI PFNGLCOLORMASKPROC glColorMask;
GLAPI PFNGLCOLORMASKIPROC glColorMaski;
GLAPI PFNGLCOLORP3UIPROC glColorP3ui;
GLAPI PFNGLCOLORP3UIVPROC glColorP3uiv;
GLAPI PFNGLCOLORP4UIPROC glColorP4ui;
GLAPI PFNGLCOLORP4UIVPROC glColorP4uiv;
GLAPI PFNGLCOMPILESHADERPROC glCompileShader;
GLAPI PFNGLCOMPRESSEDTEXIMAGE1DPROC glCompressedTexImage1D;
GLAPI PFNGLCOMPRESSEDTEXIMAGE2DPROC glCompressedTexImage2D;
GLAPI PFNGLCOMPRESSEDTEXIMAGE3DPROC glCompressedTexImage3D;
GLAPI PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC glCompressedTexSubImage1D;
GLAPI PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC glCompressedTexSubImage2D;
GLAPI PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC glCompressedTexSubImage3D;
GLAPI PFNGLCOPYBUFFERSUBDATAPROC glCopyBufferSubData;
GLAPI PFNGLCOPYTEXIMAGE1DPROC glCopyTexImage1D;
GLAPI PFNGLCOPYTEXIMAGE2DPROC glCopyTexImage2D;
GLAPI PFNGLCOPYTEXSUBIMAGE1DPROC glCopyTexSubImage1D;
GLAPI PFNGLCOPYTEXSUBIMAGE2DPROC glCopyTexSubImage2D;
GLAPI PFNGLCOPYTEXSUBIMAGE3DPROC glCopyTexSubImage3D;
GLAPI PFNGLCREATEPROGRAMPROC glCreateProgram;
GLAPI PFNGLCREATESHADERPROC glCreateShader;
GLAPI PFNGLCULLFACEPROC glCullFace;
GLAPI PFNGLDELETEBUFFERSPROC glDeleteBuffers;
GLAPI PFNGLDELETEFRAMEBUFFERSPROC glDeleteFramebuffers;
GLAPI PFNGLDELETEPROGRAMPROC glDeleteProgram;
GLAPI PFNGLDELETEQUERIESPROC glDeleteQueries;
GLAPI PFNGLDELETERENDERBUFFERSPROC glDeleteRenderbuffers;
GLAPI PFNGLDELETESAMPLERSPROC glDeleteSamplers;
GLAPI PFNGLDELETESHADERPROC glDeleteShader;
GLAPI PFNGLDELETESYNCPROC glDeleteSync;
GLAPI PFNGLDELETETEXTURESPROC glDeleteTextures;
GLAPI PFNGLDELETEVERTEXARRAYSPROC glDeleteVertexArrays;
GLAPI PFNGLDEPTHFUNCPROC glDepthFunc;
GLAPI PFNGLDEPTHMASKPROC glDepthMask;
GLAPI PFNGLDEPTHRANGEPROC glDepthRange;
GLAPI PFNGLDETACHSHADERPROC glDetachShader;
GLAPI PFNGLDISABLEPROC glDisable;
GLAPI PFNGLDISABLEVERTEXATTRIBARRAYPROC glDisableVertexAttribArray;
GLAPI PFNGLDISABLEIPROC glDisablei;
GLAPI PFNGLDRAWARRAYSPROC glDrawArrays;
GLAPI PFNGLDRAWARRAYSINSTANCEDPROC glDrawArraysInstanced;
GLAPI PFNGLDRAWBUFFERPROC glDrawBuffer;
GLAPI PFNGLDRAWBUFFERSPROC glDrawBuffers;
GLAPI PFNGLDRAWELEMENTSPROC glDrawElements;
GLAPI PFNGLDRAWELEMENTSBASEVERTEXPROC glDrawElementsBaseVertex;
GLAPI PFNGLDRAWELEMENTSINSTANCEDPROC glDrawElementsInstanced;
GLAPI PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC glDrawElementsInstancedBaseVertex;
GLAPI PFNGLDRAWRANGEELEMENTSPROC glDrawRangeElements;
GLAPI PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC glDrawRangeElementsBaseVertex;
GLAPI PFNGLENABLEPROC glEnable;
GLAPI PFNGLENABLEVERTEXATTRIBARRAYPROC glEnableVertexAttribArray;
GLAPI PFNGLENABLEIPROC glEnablei;
GLAPI PFNGLENDCONDITIONALRENDERPROC glEndConditionalRender;
GLAPI PFNGLENDQUERYPROC glEndQuery;
GLAPI PFNGLENDTRANSFORMFEEDBACKPROC glEndTransformFeedback;
GLAPI PFNGLFENCESYNCPROC glFenceSync;
GLAPI PFNGLFINISHPROC glFinish;
GLAPI PFNGLFLUSHPROC glFlush;
GLAPI PFNGLFLUSHMAPPEDBUFFERRANGEPROC glFlushMappedBufferRange;
GLAPI PFNGLFRAMEBUFFERRENDERBUFFERPROC glFramebufferRenderbuffer;
GLAPI PFNGLFRAMEBUFFERTEXTUREPROC glFramebufferTexture;
GLAPI PFNGLFRAMEBUFFERTEXTURE1DPROC glFramebufferTexture1D;
GLAPI PFNGLFRAMEBUFFERTEXTURE2DPROC glFramebufferTexture2D;
GLAPI PFNGLFRAMEBUFFERTEXTURE3DPROC glFramebufferTexture3D;
GLAPI PFNGLFRAMEBUFFERTEXTURELAYERPROC glFramebufferTextureLayer;
GLAPI PFNGLFRONTFACEPROC glFrontFace;
GLAPI PFNGLGENBUFFERSPROC glGenBuffers;
GLAPI PFNGLGENFRAMEBUFFERSPROC glGenFramebuffers;
GLAPI PFNGLGENQUERIESPROC glGenQueries;
GLAPI PFNGLGENRENDERBUFFERSPROC glGenRenderbuffers;
GLAPI PFNGLGENSAMPLERSPROC glGenSamplers;
GLAPI PFNGLGENTEXTURESPROC glGenTextures;
GLAPI PFNGLGENVERTEXARRAYSPROC glGenVertexArrays;
GLAPI PFNGLGENERATEMIPMAPPROC glGenerateMipmap;
GLAPI PFNGLGETACTIVEATTRIBPROC glGetActiveAttrib;
GLAPI PFNGLGETACTIVEUNIFORMPROC glGetActiveUniform;
GLAPI PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC glGetActiveUniformBlockName;
GLAPI PFNGLGETACTIVEUNIFORMBLOCKIVPROC glGetActiveUniformBlockiv;
GLAPI PFNGLGETACTIVEUNIFORMNAMEPROC glGetActiveUniformName;
GLAPI PFNGLGETACTIVEUNIFORMSIVPROC glGetActiveUniformsiv;
GLAPI PFNGLGETATTACHEDSHADERSPROC glGetAttachedShaders;
GLAPI PFNGLGETATTRIBLOCATIONPROC glGetAttribLocation;
GLAPI PFNGLGETBOOLEANI_VPROC glGetBooleani_v;
GLAPI PFNGLGETBOOLEANVPROC glGetBooleanv;
GLAPI PFNGLGETBUFFERPARAMETERI64VPROC glGetBufferParameteri64v;
GLAPI PFNGLGETBUFFERPARAMETERIVPROC glGetBufferParameteriv;
GLAPI PFNGLGETBUFFERPOINTERVPROC glGetBufferPointerv;
GLAPI PFNGLGETBUFFERSUBDATAPROC glGetBufferSubData;
GLAPI PFNGLGETCOMPRESSEDTEXIMAGEPROC glGetCompressedTexImage;
GLAPI PFNGLGETDOUBLEVPROC glGetDoublev;
GLAPI PFNGLGETERRORPROC glGetError;
GLAPI PFNGLGETFLOATVPROC glGetFloatv;
GLAPI PFNGLGETFRAGDATAINDEXPROC glGetFragDataIndex;
GLAPI PFNGLGETFRAGDATALOCATIONPROC glGetFragDataLocation;
GLAPI PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC glGetFramebufferAttachmentParameteriv;
GLAPI PFNGLGETINTEGER64I_VPROC glGetInteger64i_v;
GLAPI PFNGLGETINTEGER64VPROC glGetInteger64v;
GLAPI PFNGLGETINTEGERI_VPROC glGetIntegeri_v;
GLAPI PFNGLGETINTEGERVPROC glGetIntegerv;
GLAPI PFNGLGETMULTISAMPLEFVPROC glGetMultisamplefv;
GLAPI PFNGLGETPOINTERVPROC glGetPointerv;
GLAPI PFNGLGETPROGRAMINFOLOGPROC glGetProgramInfoLog;
GLAPI PFNGLGETPROGRAMIVPROC glGetProgramiv;
GLAPI PFNGLGETQUERYOBJECTI64VPROC glGetQueryObjecti64v;
GLAPI PFNGLGETQUERYOBJECTIVPROC glGetQueryObjectiv;
GLAPI PFNGLGETQUERYOBJECTUI64VPROC glGetQueryObjectui64v;
GLAPI PFNGLGETQUERYOBJECTUIVPROC glGetQueryObjectuiv;
GLAPI PFNGLGETQUERYIVPROC glGetQueryiv;
GLAPI PFNGLGETRENDERBUFFERPARAMETERIVPROC glGetRenderbufferParameteriv;
GLAPI PFNGLGETSAMPLERPARAMETERIIVPROC glGetSamplerParameterIiv;
GLAPI PFNGLGETSAMPLERPARAMETERIUIVPROC glGetSamplerParameterIuiv;
GLAPI PFNGLGETSAMPLERPARAMETERFVPROC glGetSamplerParameterfv;
GLAPI PFNGLGETSAMPLERPARAMETERIVPROC glGetSamplerParameteriv;
GLAPI PFNGLGETSHADERINFOLOGPROC glGetShaderInfoLog;
GLAPI PFNGLGETSHADERSOURCEPROC glGetShaderSource;
GLAPI PFNGLGETSHADERIVPROC glGetShaderiv;
GLAPI PFNGLGETSTRINGPROC glGetString;
GLAPI PFNGLGETSTRINGIPROC glGetStringi;
GLAPI PFNGLGETSYNCIVPROC glGetSynciv;
GLAPI PFNGLGETTEXIMAGEPROC glGetTexImage;
GLAPI PFNGLGETTEXLEVELPARAMETERFVPROC glGetTexLevelParameterfv;
GLAPI PFNGLGETTEXLEVELPARAMETERIVPROC glGetTexLevelParameteriv;
GLAPI PFNGLGETTEXPARAMETERIIVPROC glGetTexParameterIiv;
GLAPI PFNGLGETTEXPARAMETERIUIVPROC glGetTexParameterIuiv;
GLAPI PFNGLGETTEXPARAMETERFVPROC glGetTexParameterfv;
GLAPI PFNGLGETTEXPARAMETERIVPROC glGetTexParameteriv;
GLAPI PFNGLGETTRANSFORMFEEDBACKVARYINGPROC glGetTransformFeedbackVarying;
GLAPI PFNGLGETUNIFORMBLOCKINDEXPROC glGetUniformBlockIndex;
GLAPI PFNGLGETUNIFORMINDICESPROC glGetUniformIndices;
GLAPI PFNGLGETUNIFORMLOCATIONPROC glGetUniformLocation;
GLAPI PFNGLGETUNIFORMFVPROC glGetUniformfv;
GLAPI PFNGLGETUNIFORMIVPROC glGetUniformiv;
GLAPI PFNGLGETUNIFORMUIVPROC glGetUniformuiv;
GLAPI PFNGLGETVERTEXATTRIBIIVPROC glGetVertexAttribIiv;
GLAPI PFNGLGETVERTEXATTRIBIUIVPROC glGetVertexAttribIuiv;
GLAPI PFNGLGETVERTEXATTRIBPOINTERVPROC glGetVertexAttribPointerv;
GLAPI PFNGLGETVERTEXATTRIBDVPROC glGetVertexAttribdv;
GLAPI PFNGLGETVERTEXATTRIBFVPROC glGetVertexAttribfv;
GLAPI PFNGLGETVERTEXATTRIBIVPROC glGetVertexAttribiv;
GLAPI PFNGLHINTPROC glHint;
GLAPI PFNGLISBUFFERPROC glIsBuffer;
GLAPI PFNGLISENABLEDPROC glIsEnabled;
GLAPI PFNGLISENABLEDIPROC glIsEnabledi;
GLAPI PFNGLISFRAMEBUFFERPROC glIsFramebuffer;
GLAPI PFNGLISPROGRAMPROC glIsProgram;
GLAPI PFNGLISQUERYPROC glIsQuery;
GLAPI PFNGLISRENDERBUFFERPROC glIsRenderbuffer;
GLAPI PFNGLISSAMPLERPROC glIsSampler;
GLAPI PFNGLISSHADERPROC glIsShader;
GLAPI PFNGLISSYNCPROC glIsSync;
GLAPI PFNGLISTEXTUREPROC glIsTexture;
GLAPI PFNGLISVERTEXARRAYPROC glIsVertexArray;
GLAPI PFNGLLINEWIDTHPROC glLineWidth;
GLAPI PFNGLLINKPROGRAMPROC glLinkProgram;
GLAPI PFNGLLOGICOPPROC glLogicOp;
GLAPI PFNGLMAPBUFFERPROC glMapBuffer;
GLAPI PFNGLMAPBUFFERRANGEPROC glMapBufferRange;
GLAPI PFNGLMULTIDRAWARRAYSPROC glMultiDrawArrays;
GLAPI PFNGLMULTIDRAWELEMENTSPROC glMultiDrawElements;
GLAPI PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC glMultiDrawElementsBaseVertex;
GLAPI PFNGLMULTITEXCOORDP1UIPROC glMultiTexCoordP1ui;
GLAPI PFNGLMULTITEXCOORDP1UIVPROC glMultiTexCoordP1uiv;
GLAPI PFNGLMULTITEXCOORDP2UIPROC glMultiTexCoordP2ui;
GLAPI PFNGLMULTITEXCOORDP2UIVPROC glMultiTexCoordP2uiv;
GLAPI PFNGLMULTITEXCOORDP3UIPROC glMultiTexCoordP3ui;
GLAPI PFNGLMULTITEXCOORDP3UIVPROC glMultiTexCoordP3uiv;
GLAPI PFNGLMULTITEXCOORDP4UIPROC glMultiTexCoordP4ui;
GLAPI PFNGLMULTITEXCOORDP4UIVPROC glMultiTexCoordP4uiv;
GLAPI PFNGLNORMALP3UIPROC glNormalP3ui;
GLAPI PFNGLNORMALP3UIVPROC glNormalP3uiv;
GLAPI PFNGLPIXELSTOREFPROC glPixelStoref;
GLAPI PFNGLPIXELSTOREIPROC glPixelStorei;
GLAPI PFNGLPOINTPARAMETERFPROC glPointParameterf;
GLAPI PFNGLPOINTPARAMETERFVPROC glPointParameterfv;
GLAPI PFNGLPOINTPARAMETERIPROC glPointParameteri;
GLAPI PFNGLPOINTPARAMETERIVPROC glPointParameteriv;
GLAPI PFNGLPOINTSIZEPROC glPointSize;
GLAPI PFNGLPOLYGONMODEPROC glPolygonMode;
GLAPI PFNGLPOLYGONOFFSETPROC glPolygonOffset;
GLAPI PFNGLPRIMITIVERESTARTINDEXPROC glPrimitiveRestartIndex;
GLAPI PFNGLPROVOKINGVERTEXPROC glProvokingVertex;
GLAPI PFNGLQUERYCOUNTERPROC glQueryCounter;
GLAPI PFNGLREADBUFFERPROC glReadBuffer;
GLAPI PFNGLREADPIXELSPROC glReadPixels;
GLAPI PFNGLRENDERBUFFERSTORAGEPROC glRenderbufferStorage;
GLAPI PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC glRenderbufferStorageMultisample;
GLAPI PFNGLSAMPLECOVERAGEPROC glSampleCoverage;
GLAPI PFNGLSAMPLEMASKIPROC glSampleMaski;
GLAPI PFNGLSAMPLERPARAMETERIIVPROC glSamplerParameterIiv;
GLAPI PFNGLSAMPLERPARAMETERIUIVPROC glSamplerParameterIuiv;
GLAPI PFNGLSAMPLERPARAMETERFPROC glSamplerParameterf;
GLAPI PFNGLSAMPLERPARAMETERFVPROC glSamplerParameterfv;
GLAPI PFNGLSAMPLERPARAMETERIPROC glSamplerParameteri;
GLAPI PFNGLSAMPLERPARAMETERIVPROC glSamplerParameteriv;
GLAPI PFNGLSCISSORPROC glScissor;
GLAPI PFNGLSECONDARYCOLORP3UIPROC glSecondaryColorP3ui;
GLAPI PFNGLSECONDARYCOLORP3UIVPROC glSecondaryColorP3uiv;
GLAPI PFNGLSHADERSOURCEPROC glShaderSource;
GLAPI PFNGLSTENCILFUNCPROC glStencilFunc;
GLAPI PFNGLSTENCILFUNCSEPARATEPROC glStencilFuncSeparate;
GLAPI PFNGLSTENCILMASKPROC glStencilMask;
GLAPI PFNGLSTENCILMASKSEPARATEPROC glStencilMaskSeparate;
GLAPI PFNGLSTENCILOPPROC glStencilOp;
GLAPI PFNGLSTENCILOPSEPARATEPROC glStencilOpSeparate;
GLAPI PFNGLTEXBUFFERPROC glTexBuffer;
GLAPI PFNGLTEXCOORDP1UIPROC glTexCoordP1ui;
GLAPI PFNGLTEXCOORDP1UIVPROC glTexCoordP1uiv;
GLAPI PFNGLTEXCOORDP2UIPROC glTexCoordP2ui;
GLAPI PFNGLTEXCOORDP2UIVPROC glTexCoordP2uiv;
GLAPI PFNGLTEXCOORDP3UIPROC glTexCoordP3ui;
GLAPI PFNGLTEXCOORDP3UIVPROC glTexCoordP3uiv;
GLAPI PFNGLTEXCOORDP4UIPROC glTexCoordP4ui;
GLAPI PFNGLTEXCOORDP4UIVPROC glTexCoordP4uiv;
GLAPI PFNGLTEXIMAGE1DPROC glTexImage1D;
GLAPI PFNGLTEXIMAGE2DPROC glTexImage2D;
GLAPI PFNGLTEXIMAGE2DMULTISAMPLEPROC glTexImage2DMultisample;
GLAPI PFNGLTEXIMAGE3DPROC glTexImage3D;
GLAPI PFNGLTEXIMAGE3DMULTISAMPLEPROC glTexImage3DMultisample;
GLAPI PFNGLTEXPARAMETERIIVPROC glTexParameterIiv;
GLAPI PFNGLTEXPARAMETERIUIVPROC glTexParameterIuiv;
GLAPI PFNGLTEXPARAMETERFPROC glTexParameterf;
GLAPI PFNGLTEXPARAMETERFVPROC glTexParameterfv;
GLAPI PFNGLTEXPARAMETERIPROC glTexParameteri;
GLAPI PFNGLTEXPARAMETERIVPROC glTexParameteriv;
GLAPI PFNGLTEXSUBIMAGE1DPROC glTexSubImage1D;
GLAPI PFNGLTEXSUBIMAGE2DPROC glTexSubImage2D;
GLAPI PFNGLTEXSUBIMAGE3DPROC glTexSubImage3D;
GLAPI PFNGLTRANSFORMFEEDBACKVARYINGSPROC glTransformFeedbackVaryings;
GLAPI PFNGLUNIFORM1FPROC glUniform1f;
GLAPI PFNGLUNIFORM1FVPROC glUniform1fv;
GLAPI PFNGLUNIFORM1IPROC glUniform1i;
GLAPI PFNGLUNIFORM1IVPROC glUniform1iv;
GLAPI PFNGLUNIFORM1UIPROC glUniform1ui;
GLAPI PFNGLUNIFORM1UIVPROC glUniform1uiv;
GLAPI PFNGLUNIFORM2FPROC glUniform2f;
GLAPI PFNGLUNIFORM2FVPROC glUniform2fv;
GLAPI PFNGLUNIFORM2IPROC glUniform2i;
GLAPI PFNGLUNIFORM2IVPROC glUniform2iv;
GLAPI PFNGLUNIFORM2UIPROC glUniform2ui;
GLAPI PFNGLUNIFORM2UIVPROC glUniform2uiv;
GLAPI PFNGLUNIFORM3FPROC glUniform3f;
GLAPI PFNGLUNIFORM3FVPROC glUniform3fv;
GLAPI PFNGLUNIFORM3IPROC glUniform3i;
GLAPI PFNGLUNIFORM3IVPROC glUniform3iv;
GLAPI PFNGLUNIFORM3UIPROC glUniform3ui;
GLAPI PFNGLUNIFORM3UIVPROC glUniform3uiv;
GLAPI PFNGLUNIFORM4FPROC glUniform4f;
GLAPI PFNGLUNIFORM4FVPROC glUniform4fv;
GLAPI PFNGLUNIFORM4IPROC glUniform4i;
GLAPI PFNGLUNIFORM4IVPROC glUniform4iv;
GLAPI PFNGLUNIFORM4UIPROC glUniform4ui;
GLAPI PFNGLUNIFORM4UIVPROC glUniform4uiv;
GLAPI PFNGLUNIFORMBLOCKBINDINGPROC glUniformBlockBinding;
GLAPI PFNGLUNIFORMMATRIX2FVPROC glUniformMatrix2fv;
GLAPI PFNGLUNIFORMMATRIX2X3FVPROC glUniformMatrix2x3fv;
GLAPI PFNGLUNIFORMMATRIX2X4FVPROC glUniformMatrix2x4fv;
GLAPI PFNGLUNIFORMMATRIX3FVPROC glUniformMatrix3fv;
GLAPI PFNGLUNIFORMMATRIX3X2FVPROC glUniformMatrix3x2fv;
GLAPI PFNGLUNIFORMMATRIX3X4FVPROC glUniformMatrix3x4fv;
GLAPI PFNGLUNIFORMMATRIX4FVPROC glUniformMatrix4fv;
GLAPI PFNGLUNIFORMMATRIX4X2FVPROC glUniformMatrix4x2fv;
GLAPI PFNGLUNIFORMMATRIX4X3FVPROC glUniformMatrix4x3fv;
GLAPI PFNGLUNMAPBUFFERPROC glUnmapBuffer;
GLAPI PFNGLUSEPROGRAMPROC glUseProgram;
GLAPI PFNGLVALIDATEPROGRAMPROC glValidateProgram;
GLAPI PFNGLVERTEXATTRIB1DPROC glVertexAttrib1d;
GLAPI PFNGLVERTEXATTRIB1DVPROC glVertexAttrib1dv;
GLAPI PFNGLVERTEXATTRIB1FPROC glVertexAttrib1f;
GLAPI PFNGLVERTEXATTRIB1FVPROC glVertexAttrib1fv;
GLAPI PFNGLVERTEXATTRIB1SPROC glVertexAttrib1s;
GLAPI PFNGLVERTEXATTRIB1SVPROC glVertexAttrib1sv;
GLAPI PFNGLVERTEXATTRIB2DPROC glVertexAttrib2d;
GLAPI PFNGLVERTEXATTRIB2DVPROC glVertexAttrib2dv;
GLAPI PFNGLVERTEXATTRIB2FPROC glVertexAttrib2f;
GLAPI PFNGLVERTEXATTRIB2FVPROC glVertexAttrib2fv;
GLAPI PFNGLVERTEXATTRIB2SPROC glVertexAttrib2s;
GLAPI PFNGLVERTEXATTRIB2SVPROC glVertexAttrib2sv;
GLAPI PFNGLVERTEXATTRIB3DPROC glVertexAttrib3d;
GLAPI PFNGLVERTEXATTRIB3DVPROC glVertexAttrib3dv;
GLAPI PFNGLVERTEXATTRIB3FPROC glVertexAttrib3f;
GLAPI PFNGLVERTEXATTRIB3FVPROC glVertexAttrib3fv;
GLAPI PFNGLVERTEXATTRIB3SPROC glVertexAttrib3s;
GLAPI PFNGLVERTEXATTRIB3SVPROC glVertexAttrib3sv;
GLAPI PFNGLVERTEXATTRIB4NBVPROC glVertexAttrib4Nbv;
GLAPI PFNGLVERTEXATTRIB4NIVPROC glVertexAttrib4Niv;
GLAPI PFNGLVERTEXATTRIB4NSVPROC glVertexAttrib4Nsv;
GLAPI PFNGLVERTEXATTRIB4NUBPROC glVertexAttrib4Nub;
GLAPI PFNGLVERTEXATTRIB4NUBVPROC glVertexAttrib4Nubv;
GLAPI PFNGLVERTEXATTRIB4NUIVPROC glVertexAttrib4Nuiv;
GLAPI PFNGLVERTEXATTRIB4NUSVPROC glVertexAttrib4Nusv;
GLAPI PFNGLVERTEXATTRIB4BVPROC glVertexAttrib4bv;
GLAPI PFNGLVERTEXATTRIB4DPROC glVertexAttrib4d;
GLAPI PFNGLVERTEXATTRIB4DVPROC glVertexAttrib4dv;
GLAPI PFNGLVERTEXATTRIB4FPROC glVertexAttrib4f;
GLAPI PFNGLVERTEXATTRIB4FVPROC glVertexAttrib4fv;
GLAPI PFNGLVERTEXATTRIB4IVPROC glVertexAttrib4iv;
GLAPI PFNGLVERTEXATTRIB4SPROC glVertexAttrib4s;
GLAPI PFNGLVERTEXATTRIB4SVPROC glVertexAttrib4sv;
GLAPI PFNGLVERTEXATTRIB4UBVPROC glVertexAttrib4ubv;
GLAPI PFNGLVERTEXATTRIB4UIVPROC glVertexAttrib4uiv;
GLAPI PFNGLVERTEXATTRIB4USVPROC glVertexAttrib4usv;
GLAPI PFNGLVERTEXATTRIBDIVISORPROC glVertexAttribDivisor;
GLAPI PFNGLVERTEXATTRIBI1IPROC glVertexAttribI1i;
GLAPI PFNGLVERTEXATTRIBI1IVPROC glVertexAttribI1iv;
GLAPI PFNGLVERTEXATTRIBI1UIPROC glVertexAttribI1ui;
GLAPI PFNGLVERTEXATTRIBI1UIVPROC glVertexAttribI1uiv;
GLAPI PFNGLVERTEXATTRIBI2IPROC glVertexAttribI2i;
GLAPI PFNGLVERTEXATTRIBI2IVPROC glVertexAttribI2iv;
GLAPI PFNGLVERTEXATTRIBI2UIPROC glVertexAttribI2ui;
GLAPI PFNGLVERTEXATTRIBI2UIVPROC glVertexAttribI2uiv;
GLAPI PFNGLVERTEXATTRIBI3IPROC glVertexAttribI3i;
GLAPI PFNGLVERTEXATTRIBI3IVPROC glVertexAttribI3iv;
GLAPI PFNGLVERTEXATTRIBI3UIPROC glVertexAttribI3ui;
GLAPI PFNGLVERTEXATTRIBI3UIVPROC glVertexAttribI3uiv;
GLAPI PFNGLVERTEXATTRIBI4BVPROC glVertexAttribI4bv;
GLAPI PFNGLVERTEXATTRIBI4IPROC glVertexAttribI4i;
GLAPI PFNGLVERTEXATTRIBI4IVPROC glVertexAttribI4iv;
GLAPI PFNGLVERTEXATTRIBI4SVPROC glVertexAttribI4sv;
GLAPI PFNGLVERTEXATTRIBI4UBVPROC glVertexAttribI4ubv;
GLAPI PFNGLVERTEXATTRIBI4UIPROC glVertexAttribI4ui;
GLAPI PFNGLVERTEXATTRIBI4UIVPROC glVertexAttribI4uiv;
GLAPI PFNGLVERTEXATTRIBI4USVPROC glVertexAttribI4usv;
GLAPI PFNGLVERTEXATTRIBIPOINTERPROC glVertexAttribIPointer;
GLAPI PFNGLVERTEXATTRIBP1UIPROC glVertexAttribP1ui;
GLAPI PFNGLVERTEXATTRIBP1UIVPROC glVertexAttribP1uiv;
GLAPI PFNGLVERTEXATTRIBP2UIPROC glVertexAttribP2ui;
GLAPI PFNGLVERTEXATTRIBP2UIVPROC glVertexAttribP2uiv;
GLAPI PFNGLVERTEXATTRIBP3UIPROC glVertexAttribP3ui;
GLAPI PFNGLVERTEXATTRIBP3UIVPROC glVertexAttribP3uiv;
GLAPI PFNGLVERTEXATTRIBP4UIPROC glVertexAttribP4ui;
GLAPI PFNGLVERTEXATTRIBP4UIVPROC glVertexAttribP4uiv;
GLAPI PFNGLVERTEXATTRIBPOINTERPROC glVertexAttribPointer;
GLAPI PFNGLVERTEXP2UIPROC glVertexP2ui;
GLAPI PFNGLVERTEXP2UIVPROC glVertexP2uiv;
GLAPI PFNGLVERTEXP3UIPROC glVertexP3ui;
GLAPI PFNGLVERTEXP3UIVPROC glVertexP3uiv;
GLAPI PFNGLVERTEXP4UIPROC glVertexP4ui;
GLAPI PFNGLVERTEXP4UIVPROC glVertexP4uiv;
GLAPI PFNGLVIEWPORTPROC glViewport;
GLAPI PFNGLWAITSYNCPROC glWaitSync;

#define BUFFER_OFFSET(i) ((char *)NULL + (i))

namespace xOpenGL
{
	void* GetProc(const char* name);
	void Init();
	void Shutdown();
}
